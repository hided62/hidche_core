{"version":3,"file":"defaultSelectCityByMap.js","mappings":"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","sources":["webpack://hidche_lib/webpack/runtime/chunk loaded","webpack://hidche_lib/./hwe/ts/defaultSelectCityByMap.ts","webpack://hidche_lib/./hwe/ts/util/unwrap_any.ts","webpack://hidche_lib/./hwe/ts/common_legacy.ts","webpack://hidche_lib/./hwe/ts/util/convertFormData.ts","webpack://hidche_lib/./hwe/ts/map.ts","webpack://hidche_lib/./hwe/ts/util.ts","webpack://hidche_lib/webpack/bootstrap","webpack://hidche_lib/webpack/runtime/compat get default export","webpack://hidche_lib/webpack/runtime/define property getters","webpack://hidche_lib/webpack/runtime/global","webpack://hidche_lib/webpack/runtime/hasOwnProperty shorthand","webpack://hidche_lib/webpack/runtime/make namespace object","webpack://hidche_lib/webpack/runtime/node module decorator","webpack://hidche_lib/webpack/runtime/runtimeId","webpack://hidche_lib/webpack/runtime/jsonp chunk loading","webpack://hidche_lib/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { reloadWorldMap } from \"./map\";\r\nimport { unwrap_any } from \"./util/unwrap_any\";\r\n/*import $ from 'jquery';\r\nimport 'select2';*///TODO: processing\r\n\r\n\r\nexport function loadPlugin(): void {\r\n    const $target = $(\"#destCityID\");\r\n    console.log('target', $target);\r\n    void reloadWorldMap({\r\n        isDetailMap: false,\r\n        clickableAll: true,\r\n        neutralView: true,\r\n        useCachedMap: true,\r\n        selectCallback: function (city) {\r\n            const currVal = unwrap_any<string>($target.val());\r\n            $target.val(city.id).trigger(\"change\");\r\n            if ($target.val() === null) {\r\n                $target.val(currVal).trigger(\"change\");\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n}\r\n\r\n$(function () {\r\n    loadPlugin();\r\n});","import { Nullable, NotNullExpected } from \"../util\";\n\n\nexport function unwrap_any<T>(result: Nullable<unknown>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result as T;\n}\n","import { unwrap } from \"./util\";\n\nimport jQuery from \"jquery\";\nimport 'bootstrap';\n\nimport axios from \"axios\";\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n//TODO: X-Requested-With 믿지 말자.\n\n/** \n * <>& 등을 html에서도 그대로 보이도록 escape주는 함수\n * @see https://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n */\nexport const escapeHtml = (() => {\n    const entityMap: { [v: string]: string } = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n    };\n\n    return function (string: string) {\n        return String(string).replace(/[&<>\"'`=/]/g, function (s: string) {\n            return entityMap[s];\n        });\n    }\n})();\n\n/**\n * 변수가 정수인지 확인하는 함수\n * @param {*} n 정수인지 확인하기 위한 인자\n * @return {boolean} 정수인지 여부\n */\nexport function isInt(n: unknown): n is number {\n    const v = n as number;\n    return +v === v && !(v % 1);\n}\n\n\n//https://gist.github.com/demouth/3217440\n/**\n * mb_strwidth\n * @see http://php.net/manual/function.mb-strwidth.php\n */\nexport function mb_strwidth(str: string): number {\n    const l = str.length;\n    let length = 0;\n    for (let i = 0; i < l; i++) {\n        const c = str.charCodeAt(i);\n        if (0x0000 <= c && c <= 0x0019) {\n            length += 0;\n        } else if (0x0020 <= c && c <= 0x1FFF) {\n            length += 1;\n        } else if (0x2000 <= c && c <= 0xFF60) {\n            length += 2;\n        } else if (0xFF61 <= c && c <= 0xFF9F) {\n            length += 1;\n        } else if (0xFFA0 <= c) {\n            length += 2;\n        }\n    }\n    return length;\n}\n\n\n/**\n * mb_strimwidth\n * @param String\n * @param int\n * @param int\n * @param String\n * @return String\n * @see http://www.php.net/manual/function.mb-strimwidth.php\n */\nexport function mb_strimwidth(str: string, start: number, width: number, trimmarker = ''): string {\n    const trimmakerWidth = mb_strwidth(trimmarker);\n    const l = str.length;\n    let trimmedLength = 0;\n    const trimmedStr: string[] = [];\n    for (let i = start; i < l; i++) {\n        const c = str.charAt(i);\n        const charWidth = mb_strwidth(c);\n        const next = str.charAt(i + 1);\n        const nextWidth = mb_strwidth(next);\n\n        trimmedLength += charWidth;\n        trimmedStr.push(c);\n        if (trimmedLength + trimmakerWidth + nextWidth > width) {\n            trimmedStr.push(trimmarker);\n            break;\n        }\n    }\n    return trimmedStr.join('');\n}\n\n/**\n * object의 array를 id를 key로 삼는 object로 재 변환\n */\nexport function convertDictById<K extends string | number, T extends { id: K }>(arr: ArrayLike<T>): Record<K, T> {\n    const result: Record<string | number, T> = {};\n    for (const v of Object.values(arr)) {\n        result[v.id] = v;\n    }\n    return result;\n}\n\n/**\n * array를 set 형태의 object로 변환\n */\nexport function convertSet<K extends string | number>(arr: ArrayLike<K>): Record<K, true> {\n    const result: Record<string | number, true> = {};\n    for (const v of Object.values(arr)) {\n        result[v] = true;\n    }\n    return result;\n}\n\n\n/** \n * {0}, {1}, {2}형태로 포맷해주는 함수\n */\n\ndeclare global {\n    interface String {\n        format(...args: (string | number)[]): string;\n    }\n}\nString.prototype.format = function (...args: (string | number)[]) {\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return (typeof args[number] != 'undefined') ? args[number].toString() : match;\n    });\n};\n\n\nexport function hexToRgb(hex: string): { r: number, g: number, b: number } | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\nexport function isBrightColor(color: string): boolean {\n    const cv = unwrap(hexToRgb(color));\n    if ((cv.r * 0.299 + cv.g * 0.587 + cv.b * 0.114) > 140) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * 게임내에서 지원하는 color type만 선택할 수 있도록 해주는 함수\n * @param {string} color #AAAAAA 또는 AAAAAA 형태로 작성된 RGB hex color string\n * @returns {string}\n */\nexport function convColorValue(color: string): string {\n    if (color.charAt(0) == '#') {\n        color = color.substr(1);\n    }\n    color = color.toUpperCase();\n\n    const colorBase = new Set([\n        '000080', '0000FF', '008000', '008080', '00BFFF', '00FF00', '00FFFF', '20B2AA',\n        '2E8B57', '483D8B', '6495ED', '7B68EE', '7CFC00', '7FFFD4', '800000', '800080',\n        '808000', '87CEEB', 'A0522D', 'A9A9A9', 'AFEEEE', 'BA55D3', 'E0FFFF', 'F5F5DC',\n        'FF0000', 'FF00FF', 'FF6347', 'FFA500', 'FFC0CB', 'FFD700', 'FFDAB9', 'FFFF00',\n        'FFFFFF'\n    ]);\n\n    if (!colorBase.has(color)) {\n        return '000000';\n    }\n\n    return color;\n}\n\n\nexport function numberWithCommas(x: number): string {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n//linkify가 불러와 있어야함\ndeclare global {\n    interface Window {\n        linkifyStr: (v: string, k?: Record<string, string | number>) => string;\n    }\n}\nexport function linkifyStrWithOpt(text: string): string {\n    return window.linkifyStr(text, {});\n}\n\n/**\n * 단순한 Template 함수.  <%변수명%>으로 template 가능\n * @see  https://github.com/krasimir/absurd/blob/master/lib/processors/html/helpers/TemplateEngine.js\n * @param {string} html \n * @param {object} options \n * @returns {string}\n */\nexport function TemplateEngine(html: string, options: Record<string | number, unknown> = {}): string {\n    const re = /<%(.+?)%>/g;\n    const reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g;\n    const code = ['with(obj) { var r=[];\\n'];\n    let cursor = 0;\n    const add = function (line: string, js?: boolean) {\n        js ? code.push(line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n            code.push(line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n        return add;\n    }\n    options.e = escapeHtml;\n    options.linkifyStr = linkifyStrWithOpt;\n    for (; ;) {\n        const match = re.exec(html);\n        if (!match) {\n            break;\n        }\n        add(html.slice(cursor, match.index))(match[1], true);\n        cursor = match.index + match[0].length;\n    }\n    add(html.substr(cursor, html.length - cursor));\n\n    code.push('return r.join(\"\"); }');\n    const compiledCode = code.join('').replace(/[\\r\\t\\n]/g, ' ');\n    try {\n        return new Function('obj', compiledCode).apply(options, [options]);\n    } catch (err) {\n        console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n        throw err;\n    }\n}\n\nexport function getIconPath(imgsvr: boolean | 1 | 0, picture: string): string {\n    // ../d_shared/common_path.js 필요\n    if (!imgsvr) {\n        return window.pathConfig.sharedIcon + '/' + picture;\n    } else {\n        return window.pathConfig.root + '/d_pic/' + picture;\n    }\n}\n\nexport function activeFlip($obj?: JQuery<HTMLElement>): void {\n    let $result: JQuery<HTMLElement>;\n    if ($obj === undefined) {\n        $result = $('img[data-flip]');\n    } else {\n        $result = $obj.find('img[data-flip]');\n    }\n\n    $result.each(function () {\n        activeFlipItem($(this));\n    });\n\n}\n\nexport function combineObject<K extends string, V>(item: V[], columnList: K[]): Record<K, V> {\n    const newItem: Record<string, V> = {};\n    for (const columnIdx in columnList) {\n        const columnName = columnList[columnIdx];\n        newItem[columnName] = item[columnIdx];\n    }\n    return newItem;\n}\n\nexport function combineArray<K extends string, V>(array: V[][], columnList: K[]): Record<K, V>[] {\n    const result: Record<K, V>[] = [];\n    for (const key of array.keys()) {\n        const item = array[key];\n        result[key] = combineObject(item, columnList);\n    }\n    return result;\n}\n\nexport function activeFlipItem($img: JQuery<HTMLElement>): void {\n    const imageList = [];\n    imageList.push($img.attr('src'));\n    $.each($img.data('flip').split(','), function (idx, value) {\n        value = $.trim(value);\n        if (!value) {\n            return true;\n        }\n        imageList.push(value);\n    });\n    if (imageList.length <= 1) {\n        return;\n    }\n    $img.data('computed_flip_array', imageList);\n    $img.data('computed_flip_idx', 0);\n\n    $img.click(function () {\n        const arr = $img.data('computed_flip_array');\n        let idx = $img.data('computed_flip_idx');\n        idx = (idx + 1) % (arr.length);\n        $img.attr('src', arr[idx]);\n        $img.data('computed_flip_idx', idx);\n    });\n    $img.css('cursor', 'pointer');\n}\n\n\n\nexport function errUnknown(): void {\n    alert('작업을 실패했습니다.');\n}\n\n\n\nexport function errUnknownToast(): void {\n    jQuery.toast({\n        title: '에러!',\n        content: '작업을 실패했습니다.',\n        type: 'danger',\n        delay: 5000\n    });\n}\n\nexport function quickReject<T>(errMsg: string): JQuery.Promise<T> {\n    if (errMsg === undefined) {\n        errMsg = '작업을 실패했습니다.';\n    }\n    const deferred = $.Deferred();\n    void deferred.reject(errMsg);\n    return deferred.promise();\n}\n\nexport function nl2br(text: string): string {\n    return text.replace(/\\n/g, \"<br>\");\n}\n/*\nfunction br2nl (text) {   \n    return text.replace(/<\\s*\\/?br\\s*[\\/]?>/gi, '\\n');\n}\n*/\n\nexport function getNpcColor(npcType: number): 'cyan' | 'skyblue' | null {\n    if (npcType >= 2) {\n        return 'cyan';\n    }\n    if (npcType == 1) {\n        return 'skyblue';\n    }\n    return null;\n}\n\nexport function initTooltip($obj?: JQuery<HTMLElement>): void {\n    if ($obj === undefined) {\n        $obj = $('.obj_tooltip');\n    } else if (!$obj.hasClass('obj_tooltip')) {\n        $obj = $obj.find('.obj_tooltip');\n    }\n    console.log($obj);\n\n    $obj.each(function () {\n        const $target = $(this);\n\n        if ($target.data('installHandler')) {\n            return;\n        }\n        $target.data('installHandler', true);\n\n        $target.mouseover(function () {\n            const $objTooltip = $(this);\n            if ($objTooltip.data('setObjTooltip')) {\n                return;\n            }\n\n            let tooltipClassText = $objTooltip.data('tooltip-class');\n            if (!tooltipClassText) {\n                tooltipClassText = '';\n            }\n            const template = '<div class=\"tooltip {0}\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n                .format(tooltipClassText);\n\n            $objTooltip.tooltip({\n                title: function () {\n                    return $.trim($(this).find('.tooltiptext').html());\n                },\n                template: template,\n                html: true\n            }).tooltip('show');\n\n            $objTooltip.data('setObjTooltip', true);\n        });\n    });\n}","import { isArray, isString, isNumber, isBoolean } from \"lodash\";\n\nexport function convertFormData(values: Record<string, number[]|string[]|boolean[]|number|string|boolean>): FormData{\n    const formData = new FormData();\n\n    const simpleConv = (v: unknown):string=>{\n        if(isString(v)){\n            return v;\n        }\n        if(isNumber(v)){\n            return v.toString();\n        }\n        if(isBoolean(v)){\n            return v?'true':'false';\n        }\n        throw new TypeError('지원하지 않는 formData Type');\n    }\n\n    for(const [key, value] of Object.entries(values)){\n        if(isArray(value)){\n            const arrKey = `${key}[]`;\n            for(const subValue of value){\n                formData.append(arrKey, simpleConv(subValue));\n            }\n            continue;\n        }\n\n        formData.append(key, simpleConv(value));\n    }\n\n    return formData;\n}","import axios from 'axios';\r\nimport $ from 'jquery';\r\nimport { extend, isNumber } from 'lodash';\r\nimport { convColorValue, convertDictById, convertSet } from './common_legacy';\r\nimport { InvalidResponse } from './defs';\r\nimport { unwrap } from './util';\r\nimport { convertFormData } from './util/convertFormData';\r\n\r\ndeclare const serverNick: string;\r\ndeclare const serverID: string;\r\n\r\ntype CityPositionMap = {\r\n    [cityID: number]: [string, number, number];\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        sam_toggleSingleTap?: boolean,\r\n        reloadWorldMap: (option: loadMapOption, drawTarget?: string) => Promise<void>;\r\n        getCityPosition: () => CityPositionMap;\r\n        formatCityInfo: (city: MapCityParsedRaw)=>MapCityParsedRegionLevelText\r\n    }\r\n}\r\n\r\ntype MapCityCompact = [number, number, number, number, number, number];\r\ntype MapNationCompact = [number, string, string, number];\r\n\r\ntype MapCityParsedRaw = {\r\n    id: number,\r\n    level: number,\r\n    state: number,\r\n    nationID?: number,\r\n    region: number,\r\n    supply: boolean\r\n};\r\n\r\ntype MapCityParsedName = MapCityParsedRaw & {\r\n    name: string,\r\n    x: number,\r\n    y: number,\r\n};\r\n\r\ntype MapCityParsedNation = MapCityParsedName & {\r\n    nationID?: number;\r\n    nation?: string;\r\n    color?: string;\r\n    isCapital: boolean\r\n}\r\n\r\ntype MapCityParsedClickable = MapCityParsedNation & {\r\n    clickable: number\r\n}\r\n\r\ntype MapCityParsedRegionLevelText = MapCityParsedClickable & {\r\n    region_str: string,\r\n    level_str: string,\r\n    text: string,\r\n}\r\n\r\ntype MapCityParsed = MapCityParsedRegionLevelText;\r\n\r\ntype MapCityDrawable = {\r\n    cityList: MapCityParsed[],\r\n    myCity?: number\r\n};\r\n\r\ntype MapNationParsed = {\r\n    id: number,\r\n    name: string,\r\n    color: string,\r\n    capital: number\r\n}\r\n\r\ntype MapResult = {\r\n    result: true,\r\n    startYear: number,\r\n    year: number,\r\n    month: number,\r\n    cityList: MapCityCompact[],\r\n    nationList: MapNationCompact[],\r\n    spyList: Record<number, number>,\r\n    shownByGeneralList: number[],\r\n    myCity?: number,\r\n    myNation?: number,\r\n\r\n    theme?: string,\r\n    history?: string[],\r\n}\r\ntype MapRawResult = InvalidResponse | MapResult;\r\n\r\nfunction is_touch_device(): boolean {\r\n    const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\r\n    const mq = (query: string) => {\r\n        return window.matchMedia(query).matches;\r\n    }\r\n\r\n    type TouchWindow = { DocumentTouch?: () => void | Document };\r\n    const tWindow = window as unknown as TouchWindow;\r\n    if (('ontouchstart' in window) || (tWindow.DocumentTouch && (document instanceof tWindow.DocumentTouch))) {\r\n        return true;\r\n    }\r\n\r\n\r\n    // include the 'heartz' as a way to have a non matching MQ to help terminate the join\r\n    // https://git.io/vznFH\r\n    const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\r\n    return mq(query);\r\n}\r\n\r\ntype loadMapOption = {\r\n    isDetailMap?: boolean, //복잡 지도, 단순 지도\r\n    clickableAll?: boolean, //어떤 경우든 클릭을 가능하게 함. 해당 동작의 동작 가능성 여부와는 별도.\r\n    selectCallback?: (city: MapCityParsed) => void, //callback을 지정시 clickable과 관계 없이 해당 함수를 실행.\r\n    hrefTemplate?: string, //도시가 클릭가능할 경우 지정할 href값. {0}은 도시 id로 변환됨\r\n    useCachedMap?: boolean, //맵 캐시를 사용\r\n\r\n    //아래부터는 post query에 들어갈 녀석\r\n    year?: number, //year값, 연감등에 사용\r\n    month?: number, //month값, 연감등에 사용\r\n    aux?: Record<number | string, unknown>, //기타 넣고 싶은 값을 입력\r\n    neutralView?: boolean, //clickable, 소속 국가, 첩보 여부 등을 반환여부를 설정\r\n    showMe?: boolean, //반환 값에 본인이 위치한 도시 값을 반환하도록 설정. neutralView와 별개\r\n\r\n    targetJson?: string,\r\n    reqType?: 'get' | 'post',\r\n    dynamicMapTheme?: boolean,\r\n    callback?: (a: MapCityDrawable, rawObejct: MapRawResult) => void,\r\n\r\n    //기타 보조 값\r\n    startYear?: number,\r\n}\r\n\r\nexport async function reloadWorldMap(option: loadMapOption, drawTarget = '.world_map'): Promise<void> {\r\n    const $world_map = $(drawTarget);\r\n\r\n    if ($world_map.length == 0) {\r\n        return;\r\n    }\r\n\r\n    const defaultOption: loadMapOption = {\r\n        isDetailMap: true, //복잡 지도, 단순 지도\r\n        clickableAll: false, //어떤 경우든 클릭을 가능하게 함. 해당 동작의 동작 가능성 여부와는 별도.\r\n        selectCallback: undefined, //callback을 지정시 clickable과 관계 없이 해당 함수를 실행.\r\n        hrefTemplate: '#', //도시가 클릭가능할 경우 지정할 href값. {0}은 도시 id로 변환됨\r\n        useCachedMap: false, //맵 캐시를 사용\r\n\r\n        //아래부터는 post query에 들어갈 녀석\r\n        year: undefined, //year값, 연감등에 사용\r\n        month: undefined, //month값, 연감등에 사용\r\n        aux: undefined, //기타 넣고 싶은 값을 입력\r\n        neutralView: false, //clickable, 소속 국가, 첩보 여부 등을 반환여부를 설정\r\n        showMe: true, //반환 값에 본인이 위치한 도시 값을 반환하도록 설정. neutralView와 별개\r\n\r\n        targetJson: 'j_map.php',\r\n        reqType: 'post',\r\n        dynamicMapTheme: false,\r\n        callback: undefined,\r\n\r\n        //기타 보조 값\r\n        startYear: undefined,\r\n    };\r\n\r\n    option = extend({}, defaultOption, option);\r\n\r\n    const useCachedMap = option.useCachedMap;\r\n    const isDetailMap = option.isDetailMap;\r\n    const clickableAll = option.clickableAll;\r\n    const selectCallback = option.selectCallback;\r\n    const hrefTemplate = unwrap(option.hrefTemplate);\r\n\r\n    const cityPosition = window.getCityPosition();\r\n\r\n    const storedOldMapKey = `sam.${serverNick}.map`;\r\n    const storedStartYear = `am.${serverNick}.startYear`;\r\n    //OBJ : startYear, year, month, cityList, nationList, spyList, shownByGeneralList, myCity\r\n\r\n    async function checkReturnObject(obj: MapRawResult): Promise<MapResult> {\r\n        if (!obj.result) {\r\n            throw `fail: ${obj.reason}`;\r\n        }\r\n\r\n        if (!isNumber(obj.startYear) ||\r\n            !isNumber(obj.year) ||\r\n            !isNumber(obj.month)\r\n        ) {\r\n            throw 'fail: date type';\r\n        }\r\n\r\n        if (useCachedMap) {\r\n            localStorage.setItem(storedOldMapKey, JSON.stringify([serverID, obj]));\r\n            localStorage.setItem(storedStartYear, JSON.stringify(obj.startYear));\r\n        }\r\n\r\n        $world_map.removeClass('draw_required');\r\n\r\n        return obj;\r\n    }\r\n\r\n\r\n\r\n    async function setMapBackground(obj: MapResult): Promise<MapResult> {\r\n        function setTheme() {\r\n            const oldTheme = $world_map.data('currentTheme');\r\n            const newTheme = obj.theme;\r\n            if (oldTheme === newTheme) {\r\n                return;\r\n            }\r\n            if (oldTheme) {\r\n                $world_map.removeClass('map_theme_' + oldTheme);\r\n            }\r\n            $world_map.addClass('map_theme_' + newTheme);\r\n            $world_map.data('currentTheme', newTheme ?? '_current');//FIXME: 뭔가 틀렸음. 전송시에 theme가 있어야하나?\r\n        }\r\n        if (option.dynamicMapTheme) {\r\n            setTheme();\r\n        }\r\n        const startYear = obj.startYear;\r\n        const year = obj.year;\r\n        const month = obj.month;\r\n\r\n        if (isDetailMap) {\r\n            $world_map.addClass('map_detail').removeClass('map_basic');\r\n        } else {\r\n            $world_map.addClass('map_basic').removeClass('map_detail');\r\n        }\r\n\r\n        const $map_title = $('.map_title_text');\r\n        if (year < startYear + 1) {\r\n            $map_title.css('color', 'magenta');\r\n        } else if (year < startYear + 2) {\r\n            $map_title.css('color', 'orange');\r\n        } else if (year < startYear + 3) {\r\n            $map_title.css('color', 'yellow');\r\n        }\r\n\r\n        const $map_title_tooltip = $('.map_title .tooltiptext');\r\n        $map_title_tooltip.empty();\r\n\r\n        const tooltipTexts = [];\r\n        if (year < startYear + 3) {\r\n            const startYearText = [];\r\n            let remainYear = startYear + 3 - year;\r\n            const remainMonth = 12 - month + 1;\r\n            if (remainMonth > 0) {\r\n                remainYear -= 1;\r\n            }\r\n            if (remainYear) {\r\n                startYearText.push('{0}년'.format(remainYear));\r\n            }\r\n            if (remainMonth) {\r\n                startYearText.push('{0}개월'.format(remainMonth));\r\n            }\r\n\r\n            tooltipTexts.push('초반제한 기간 : {0} ({1}년)'.format(startYearText.join(' '), startYear + 3));\r\n        }\r\n\r\n        const currentTechLimit = Math.floor(Math.max(0, year - startYear) / 5) + 1;\r\n        const nextTechLimitYear = currentTechLimit * 5 + startYear;\r\n\r\n        tooltipTexts.push('기술등급 제한 : {0}등급 ({1}년 해제)'.format(currentTechLimit, nextTechLimitYear, currentTechLimit + 1));\r\n        $map_title_tooltip.html(tooltipTexts.join('<br>'));\r\n\r\n        $world_map.removeClass('map_string map_summer map_fall map_winter');\r\n        if (month <= 3) {\r\n            $world_map.addClass('map_spring');\r\n        } else if (month <= 6) {\r\n            $world_map.addClass('map_summer');\r\n        } else if (month <= 9) {\r\n            $world_map.addClass('map_fall');\r\n        } else {\r\n            $world_map.addClass('map_winter');\r\n        }\r\n\r\n        $map_title.html('{0}年 {1}月'.format(year, month));\r\n\r\n        return obj;\r\n    }\r\n\r\n    async function convertCityObjs(obj: MapResult): Promise<MapCityDrawable> {\r\n        //원본 Obj는 굉장히 간소하게 온다, Object 형태로 변환해서 사용한다.\r\n\r\n        function toCityObj([id, level, state, nationID, region, supply]: MapCityCompact): MapCityParsedRaw {\r\n            return {\r\n                id: id,\r\n                level: level,\r\n                state: state,\r\n                nationID: nationID > 0 ? nationID : undefined,\r\n                region: region,\r\n                supply: supply != 0\r\n            };\r\n        }\r\n\r\n        function toNationObj([id, name, color, capital]: MapNationCompact): MapNationParsed {\r\n            return {\r\n                id,\r\n                name,\r\n                color,\r\n                capital\r\n            };\r\n        }\r\n\r\n        const nationList = convertDictById(obj.nationList.map(toNationObj)); //array of object -> dict\r\n\r\n        const spyList = obj.spyList;\r\n        const shownByGeneralList = new Set(obj.shownByGeneralList);\r\n\r\n        const myCity = obj.myCity;\r\n        const myNation = obj.myNation;\r\n\r\n\r\n        function mergePositionInfo(city: MapCityParsedRaw): MapCityParsedName {\r\n            const id = city.id;\r\n            if (!(id in cityPosition)) {\r\n                throw TypeError(`알수 없는 cityID: ${id}`);\r\n            }\r\n            const [name, x, y] = cityPosition[id];\r\n\r\n            return {\r\n                ...city,\r\n                name,\r\n                x,\r\n                y,\r\n            };\r\n        }\r\n\r\n        function mergeNationInfo(city: MapCityParsedName):MapCityParsedNation{\r\n            //nationID 값으로 isCapital, color, nation을 통합\r\n\r\n            const nationID = city.nationID;\r\n            if (nationID === undefined || !(nationID in nationList)) {\r\n                return {\r\n                    ...city,\r\n                    isCapital: false,\r\n                };\r\n            }\r\n\r\n            const nationObj = nationList[nationID];\r\n            return {\r\n                ...city,\r\n                nation: nationObj.name,\r\n                color: nationObj.color,\r\n                isCapital: nationObj.capital == city.id\r\n            };\r\n        }\r\n\r\n        function mergeClickable(city:MapCityParsedNation): MapCityParsedClickable {\r\n            //clickable = (defaultCity << 4 ) | (remainSpy << 3) | (ourCity << 2) | (shownByGeneral << 1) | clickableAll\r\n            const id = city.id;\r\n            const nationID = city.nationID;\r\n            let clickable = 16;\r\n            if (id in spyList) {\r\n                clickable |= spyList[id] << 3;\r\n            }\r\n            if (myNation !== null && nationID == myNation) {\r\n                clickable |= 4;\r\n            }\r\n            if (shownByGeneralList.has(id)) {\r\n                clickable |= 2;\r\n            }\r\n            if (myCity !== null && id == myCity) {\r\n                clickable |= 2;\r\n            }\r\n            if (clickableAll) {\r\n                clickable |= 1;\r\n            }\r\n\r\n\r\n            return {\r\n                ...city,\r\n                clickable\r\n            };\r\n        }\r\n\r\n        const cityList = obj.cityList.map(toCityObj)\r\n            .map(mergePositionInfo)\r\n            .map(mergeNationInfo)\r\n            .map(mergeClickable)\r\n            .map(window.formatCityInfo);\r\n\r\n        return {\r\n            'cityList': cityList,\r\n            'myCity': myCity\r\n        };\r\n    }\r\n\r\n    function drawDetailWorldMap(obj: MapCityDrawable) {\r\n\r\n        const $map_body = $(drawTarget + ' .map_body');\r\n\r\n        const cityList = obj.cityList;\r\n        const myCity = obj.myCity;\r\n\r\n        cityList.forEach(function (city) {\r\n            const id = city.id;\r\n            $(`.city_base_${id}`).detach();\r\n            //이전 도시는 지운다.\r\n\r\n            const $cityObj = $(`<div class=\"city_base city_base_${id}\"></div>`);\r\n            $cityObj.addClass(`city_level_${city.level}`);\r\n            $cityObj.data('obj', city).css({ 'left': city.x - 20, 'top': city.y - 15 });\r\n\r\n            if (city.color !== undefined) {\r\n                const $bgObj = $('<div class=\"city_bg\"></div>');\r\n                $cityObj.append($bgObj);\r\n                $bgObj.css({ 'background-image': 'url({0}/b{1}.png)'.format(window.pathConfig.gameImage, convColorValue(city.color)) });\r\n            }\r\n\r\n            const $linkObj = $('<a class=\"city_link\"></a>');\r\n            $linkObj.data({ 'text': city.text, 'nation': city.nation, 'id': city.id });\r\n            $cityObj.append($linkObj);\r\n\r\n            const $imgObj = $(`<div class=\"city_img\"><img src=\"${window.pathConfig.gameImage}/cast_${city.level}.gif\"><div class=\"city_filler\"></div></div>`);\r\n            $linkObj.append($imgObj);\r\n\r\n            if (city.state > 0) {\r\n                const $stateObj = $(`<div class=\"city_state\"><img src=\"${window.pathConfig.gameImage}/event${city.state}.gif\"></div>`);\r\n                $linkObj.append($stateObj);\r\n            }\r\n\r\n            if (city.nationID && city.nationID > 0) {\r\n                const flagType = city.supply ? 'f' : 'd';\r\n                const $flagObj = $(`<div class=\"city_flag\"><img src=\"${window.pathConfig.gameImage}/${flagType}${convColorValue(unwrap(city.color))}.gif\"></div>`);\r\n                if (city.isCapital) {\r\n                    const $capitalObj = $(`<div class=\"city_capital\"><img src=\"${window.pathConfig.gameImage}/event51.gif\"></div>`);\r\n                    $flagObj.append($capitalObj);\r\n                }\r\n                $imgObj.append($flagObj);\r\n            }\r\n\r\n            const $nameObj = $(`<span class=\"city_detail_name\">${city.name}</span>`);\r\n            $imgObj.append($nameObj);\r\n\r\n\r\n            $map_body.append($cityObj);\r\n\r\n\r\n        });\r\n\r\n        if(myCity){\r\n            $world_map.find(`.city_base_${myCity} .city_filler`).addClass('my_city');\r\n        }\r\n\r\n\r\n        return obj;\r\n    }\r\n\r\n    function drawBasicWorldMap(obj:MapCityDrawable) {\r\n\r\n        const $map_body = $(`${drawTarget} .map_body`);\r\n\r\n        const cityList = obj.cityList;\r\n        const myCity = obj.myCity;\r\n\r\n        cityList.forEach(function (city) {\r\n            const id = city.id;\r\n            $(`.city_base_${id}`).detach();\r\n            //이전 도시는 지운다.\r\n\r\n            const $cityObj = $(`<div class=\"city_base city_base_${id}\"></div>`);\r\n            $cityObj.addClass(`city_level_${city.level}`);\r\n            $cityObj.data('obj', city).css({ 'left': city.x - 20, 'top': city.y - 15 });\r\n\r\n            const $linkObj = $('<a class=\"city_link\"></a>');\r\n            $linkObj.data({ 'text': city.text, 'nation': city.nation, 'id': city.id });\r\n            $cityObj.append($linkObj);\r\n\r\n            const $imgObj = $('<div class=\"city_img\"><div class=\"city_filler\"></div></div>');\r\n            if (city.color !== undefined) {\r\n                $imgObj.css({ 'background-color': city.color });\r\n            }\r\n            $linkObj.append($imgObj);\r\n\r\n            if (city.state > 0) {\r\n                let state_text = 'wrong';\r\n                if (city.state < 10) {\r\n                    state_text = 'good';\r\n                } else if (city.state < 40) {\r\n                    state_text = 'bad';\r\n                } else if (city.state < 50) {\r\n                    state_text = 'war';\r\n                }\r\n\r\n                const $stateObj = $(`<div class=\"city_state city_state_${state_text}\"></div>`);\r\n                $imgObj.append($stateObj);\r\n            }\r\n\r\n            //단순 표기에서는 깃발 여부가 없음\r\n            if (city.isCapital) {\r\n                const $capitalObj = $('<div class=\"city_capital\"></div>');\r\n                $imgObj.append($capitalObj);\r\n            }\r\n\r\n            const $nameObj = $(`<span class=\"city_detail_name\">${city.name}</span>`.format());\r\n            $imgObj.append($nameObj);\r\n\r\n            $map_body.append($cityObj);\r\n        });\r\n\r\n        if(myCity){\r\n            $world_map.find(`.city_base_${myCity} .city_filler`).addClass('my_city');\r\n        }\r\n\r\n\r\n        return obj;\r\n    }\r\n\r\n    function setMouseWork(obj:MapCityDrawable) {\r\n        const $tooltip = $(drawTarget + ' .city_tooltip');\r\n        const $tooltip_city = $tooltip.find('.city_name');\r\n        const $tooltip_nation = $tooltip.find('.nation_name');\r\n\r\n        const $objs = $(drawTarget + ' .city_link');\r\n\r\n        const $map_body = $(drawTarget + ' .map_body');\r\n\r\n        //터치스크린 탭\r\n\r\n        if (!option.neutralView && is_touch_device()) {\r\n            $objs.on('touchstart', function (e) {\r\n                if (window.sam_toggleSingleTap) {\r\n                    return true;\r\n                }\r\n                const $this = $(this);\r\n\r\n                const touchMode = $this.data('touchMode') as number;\r\n                if ($tooltip_city.data('target') != $this.data('id')) {\r\n                    $this.data('touchMode', 1);\r\n                } else if (touchMode === undefined) {\r\n                    $this.data('touchMode', 1);\r\n                } else {\r\n                    $this.data('touchMode', touchMode + 1);\r\n                }\r\n                $map_body.data('touchMode', 1);\r\n\r\n                $tooltip_city.data('target', $this.data('id'));\r\n\r\n\r\n            });\r\n\r\n            $objs.on('touchend', function () {\r\n                if (window.sam_toggleSingleTap) {\r\n                    return true;\r\n                }\r\n                const $this = $(this);\r\n                const position = $this.parent().position();\r\n                $tooltip_city.html($this.data('text') as string);\r\n\r\n                const nation_text = $this.data('nation') as string;\r\n                if (nation_text) {\r\n                    $tooltip_nation.html(nation_text).show();\r\n                } else {\r\n                    $tooltip_nation.html('').hide();\r\n                }\r\n\r\n                let left = position.left;\r\n                let top = position.top;\r\n\r\n                const scale = $map_body.data('scale');\r\n                if (scale) {\r\n                    left /= scale;\r\n                    top /= scale;\r\n                }\r\n\r\n                $tooltip.css({ 'top': top + 25, 'left': left + 35 }).show();\r\n\r\n                const touchMode = $this.data('touchMode') as number;\r\n                if (touchMode <= 1) {\r\n                    return false;\r\n                }\r\n\r\n                //xxx: touchend 다음 click 이벤트가 갈 수도 있고, 안 갈 수도 있다.\r\n                $this.data('touchMode', 0);\r\n            });\r\n\r\n            $map_body.on('touchend', function () {\r\n                if (window.sam_toggleSingleTap) {\r\n                    return true;\r\n                }\r\n                //위의 touchend bind에 해당하지 않는 경우 -> 빈 지도 터치\r\n                $tooltip.hide();\r\n            });\r\n\r\n        }\r\n\r\n        //Mouse over 모드 작동\r\n\r\n        $map_body.on('mousemove', function (e) {\r\n            if ($(this).data('touchMode')) {\r\n                return true;\r\n            }\r\n\r\n            const rect = this.getBoundingClientRect();\r\n            let left = (e.clientX - rect.left - this.clientLeft + this.scrollLeft);\r\n            let top = (e.clientY - rect.top - this.clientTop + this.scrollTop);\r\n\r\n            const scale = $map_body.data('scale');\r\n            if (scale) {\r\n                left /= scale;\r\n                top /= scale;\r\n            }\r\n\r\n            $tooltip.css({ 'top': top + 10, 'left': left + 10 });\r\n        });\r\n\r\n        $objs.on('mouseenter', function () {\r\n            if ($map_body.data('touchMode')) {\r\n                return true;\r\n            }\r\n\r\n            const $this = $(this);\r\n\r\n            $tooltip_city.data('target', $this.data('id'));\r\n            $tooltip_city.html($this.data('text'));\r\n            const nation_text = $this.data('nation');\r\n            if (nation_text) {\r\n                $tooltip_nation.html(nation_text).show();\r\n            } else {\r\n                $tooltip_nation.html('').hide();\r\n            }\r\n\r\n            $tooltip.show();\r\n        });\r\n\r\n        $objs.on('mouseleave', function () {\r\n            $tooltip.hide();\r\n        });\r\n\r\n        $objs.on('click', function () {\r\n            //xxx: touchend 다음 click 이벤트가 갈 수도 있고, 안 갈 수도 있다.\r\n            const touchMode = $(this).data('touchMode') as number|undefined;\r\n            if (touchMode === undefined) {\r\n                return;\r\n            }\r\n\r\n            if (touchMode === 1) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n\r\n        return obj;\r\n    }\r\n\r\n    function setCityClickable(obj:MapCityDrawable) {\r\n\r\n        obj.cityList.forEach(function (city) {\r\n            const $cityLink = $world_map.find(`.city_base_${city.id} .city_link`);\r\n\r\n            if ('clickable' in city && city.clickable > 0) {\r\n                $cityLink.attr('href', hrefTemplate.format(city.id));\r\n            }\r\n\r\n            if (selectCallback) {\r\n                $cityLink.on('click', function () {\r\n                    return selectCallback(city);\r\n                });\r\n            }\r\n        });\r\n\r\n        return obj;\r\n    }\r\n\r\n    function saveCityInfo(obj: MapCityDrawable) {\r\n        $world_map.data('cityInfo', obj);\r\n        return obj;\r\n    }\r\n\r\n    const $hideCityNameBtn = $world_map.find('.map_toggle_cityname');\r\n    if (localStorage.getItem('sam.hideMapCityName') == 'yes') {\r\n        $world_map.addClass('hide_cityname');\r\n        $hideCityNameBtn.addClass('active').attr('aria-pressed', 'true');\r\n    }\r\n\r\n    $hideCityNameBtn.click(function () {\r\n        //이전 상태 확인\r\n        const state = !$hideCityNameBtn.hasClass('active');\r\n        if (state) {\r\n            $world_map.addClass('hide_cityname');\r\n            localStorage.setItem('sam.hideMapCityName', 'yes');\r\n        } else {\r\n            $world_map.removeClass('hide_cityname');\r\n            localStorage.setItem('sam.hideMapCityName', 'no');\r\n        }\r\n    });\r\n\r\n    const $toggleSingleTapBtn = $world_map.find('.map_toggle_single_tap');\r\n    if (localStorage.getItem('sam.toggleSingleTap') == 'yes') {\r\n        window.sam_toggleSingleTap = true;\r\n        $toggleSingleTapBtn.addClass('active').attr('aria-pressed', 'true');\r\n    } else {\r\n        window.sam_toggleSingleTap = false;\r\n    }\r\n\r\n    const $map_body = $(drawTarget + ' .map_body');\r\n\r\n    $toggleSingleTapBtn.click(function () {\r\n        //이전 상태 확인\r\n        const state = !$toggleSingleTapBtn.hasClass('active');\r\n        if (state) {\r\n            $map_body.removeData('touchMode');\r\n            localStorage.setItem('sam.toggleSingleTap', 'yes');\r\n            window.sam_toggleSingleTap = true;\r\n        } else {\r\n            localStorage.setItem('sam.toggleSingleTap', 'no');\r\n            window.sam_toggleSingleTap = false;\r\n        }\r\n    });\r\n\r\n    if (isDetailMap) {\r\n        $world_map.addClass('map_detail');\r\n    } else {\r\n        $world_map.removeClass('map_datail');\r\n    }\r\n\r\n    const responseP = axios({\r\n        url: unwrap(option.targetJson),\r\n        method: unwrap(option.reqType),\r\n        responseType: 'json',\r\n        data: convertFormData({\r\n            data: JSON.stringify({\r\n                neutralView: option.neutralView,\r\n                year: option.year,\r\n                month: option.month,\r\n                showMe: option.showMe,\r\n                aux: option.aux\r\n            })\r\n        })\r\n    });\r\n\r\n    const response = await responseP;\r\n\r\n    const rawObject: MapRawResult = response.data;\r\n\r\n    const computedResult = await checkReturnObject(rawObject)\r\n        .then(setMapBackground)\r\n        .then(convertCityObjs)\r\n        .then(isDetailMap ? drawDetailWorldMap : drawBasicWorldMap)\r\n        .then(setMouseWork)\r\n        .then(setCityClickable)\r\n        .then(saveCityInfo);\r\n\r\n    if (option.callback) {\r\n        option.callback(computedResult, rawObject);\r\n    }\r\n\r\n    if ($world_map.hasClass('draw_required')) {\r\n        if (useCachedMap) {\r\n            //일단 불러옴\r\n            await (async ()=>{\r\n                const rawStoredMap = localStorage.getItem(storedOldMapKey);\r\n                if (!rawStoredMap) {\r\n                    return;\r\n                }\r\n                const [storedServerID, storedMap] = JSON.parse(rawStoredMap) as [string, MapResult];\r\n                if (storedServerID != serverID) {\r\n                    return;\r\n                }\r\n\r\n                await setMapBackground(storedMap)\r\n                .then(convertCityObjs)\r\n                .then(isDetailMap?drawDetailWorldMap:drawBasicWorldMap)\r\n                .then(setMouseWork)\r\n                .then(setCityClickable)\r\n                .then(saveCityInfo);\r\n            })();\r\n        } else if (option.year && option.month) {\r\n            const rawStartYear = localStorage.getItem(storedStartYear) as string|undefined;\r\n            let startYear: number;\r\n            if (rawStartYear) {\r\n                startYear = JSON.parse(rawStartYear);\r\n            } else {\r\n                startYear = option.year;\r\n            }\r\n            await setMapBackground({\r\n                year: option.year,\r\n                month: option.month,\r\n                startYear: startYear\r\n            } as unknown as MapResult);\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nwindow.reloadWorldMap = reloadWorldMap;\r\n$(function ($) {\r\n    if (is_touch_device()) {\r\n        $('.map_body .map_toggle_single_tap').show();\r\n    }\r\n})","type ErrType<T> = { new(msg?: string): T }\nexport type Nullable<T> = T | null | undefined\n\nexport class RuntimeError extends Error {\n    public name = 'RuntimeError';\n    constructor(public message: string = '') {\n        super(message);\n    }\n    toString(): string {\n        if (this.message) {\n            return this.name + ': ' + this.message;\n        }\n        else {\n            return this.name;\n        }\n    }\n}\n\nexport class NotNullExpected extends RuntimeError {\n    public name = 'NotNullExpected';\n}\n\nexport function unwrap<T>(result: Nullable<T>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result;\n}\n\nexport function unwrap_err<T, ErrT extends Error>(result: Nullable<T>, errType: ErrType<ErrT>, errMsg?: string): T {\n    if (result === null || result === undefined) {\n        throw new errType(errMsg);\n    }\n    return result;\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 878;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t878: 0,\n\t842: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhidche_lib\"] = self[\"webpackChunkhidche_lib\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5438)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","$","$target","console","log","isDetailMap","clickableAll","neutralView","useCachedMap","selectCallback","city","currVal","result","unwrap_any","val","id","trigger","convertDictById","arr","Object","values","v","convColorValue","color","charAt","substr","toUpperCase","Set","has","String","prototype","format","args","this","replace","match","number","toString","convertFormData","formData","FormData","simpleConv","TypeError","entries","key","value","arrKey","subValue","append","is_touch_device","query","prefixes","split","tWindow","window","DocumentTouch","document","join","matchMedia","matches","reloadWorldMap","option","checkReturnObject","setMapBackground","convertCityObjs","drawDetailWorldMap","drawBasicWorldMap","setMouseWork","setCityClickable","saveCityInfo","obj","$world_map","data","cityList","forEach","$cityLink","find","clickable","attr","hrefTemplate","on","$tooltip","drawTarget","$tooltip_city","$tooltip_nation","$objs","$map_body","e","sam_toggleSingleTap","$this","touchMode","undefined","position","parent","html","nation_text","show","hide","left","top","scale","css","rect","getBoundingClientRect","clientX","clientLeft","scrollLeft","clientY","clientTop","scrollTop","myCity","detach","$cityObj","addClass","level","x","y","$linkObj","text","nation","$imgObj","state","state_text","$stateObj","isCapital","$capitalObj","$nameObj","name","$bgObj","pathConfig","gameImage","nationID","flagType","supply","$flagObj","toCityObj","toNationObj","mergePositionInfo","mergeNationInfo","mergeClickable","spyList","myNation","shownByGeneralList","nationList","nationObj","capital","cityPosition","region","map","formatCityInfo","setTheme","oldTheme","newTheme","theme","removeClass","dynamicMapTheme","startYear","year","month","$map_title","$map_title_tooltip","empty","tooltipTexts","startYearText","remainYear","remainMonth","push","currentTechLimit","Math","floor","max","nextTechLimitYear","reason","localStorage","setItem","storedOldMapKey","JSON","stringify","serverID","storedStartYear","length","defaultOption","aux","showMe","targetJson","reqType","callback","getCityPosition","serverNick","$hideCityNameBtn","getItem","click","hasClass","$toggleSingleTapBtn","removeData","responseP","url","method","responseType","response","rawObject","then","computedResult","rawStoredMap","parse","storedServerID","storedMap","rawStartYear","NotNullExpected","message","Error","unwrap","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}