{"version":3,"file":"chiefCenter.js","mappings":"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","sources":["webpack://hidche_lib/webpack/runtime/chunk loaded","webpack://hidche_lib/./hwe/ts/util/NotNullExpected.ts","webpack://hidche_lib/./hwe/ts/util/unwrap.ts","webpack://hidche_lib/./hwe/ts/common_legacy.ts","webpack://hidche_lib/./hwe/ts/util/convertFormData.ts","webpack://hidche_lib/./hwe/ts/util/unwrap_any.ts","webpack://hidche_lib/./hwe/ts/chiefCenter.ts","webpack://hidche_lib/webpack/bootstrap","webpack://hidche_lib/webpack/runtime/compat get default export","webpack://hidche_lib/webpack/runtime/define property getters","webpack://hidche_lib/webpack/runtime/global","webpack://hidche_lib/webpack/runtime/hasOwnProperty shorthand","webpack://hidche_lib/webpack/runtime/make namespace object","webpack://hidche_lib/webpack/runtime/node module decorator","webpack://hidche_lib/webpack/runtime/runtimeId","webpack://hidche_lib/webpack/runtime/jsonp chunk loading","webpack://hidche_lib/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\nexport class NotNullExpected extends TypeError {\n    public name = 'NotNullExpected';\n}\n","import { Nullable } from \"./Nullable\";\nimport { NotNullExpected } from \"./NotNullExpected\";\n\nexport function unwrap<T>(result: Nullable<T>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result;\n}\n","import { unwrap } from \"./util/unwrap\";\n\nimport jQuery from \"jquery\";\nimport 'bootstrap';\n\nimport axios from \"axios\";\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n//TODO: X-Requested-With 믿지 말자.\n\n/**\n * <>& 등을 html에서도 그대로 보이도록 escape주는 함수\n * @see https://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n */\nexport const escapeHtml = (() => {\n    const entityMap: { [v: string]: string } = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n    };\n\n    return function (string: string) {\n        return String(string).replace(/[&<>\"'`=/]/g, function (s: string) {\n            return entityMap[s];\n        });\n    }\n})();\n\n/**\n * 변수가 정수인지 확인하는 함수\n * @param {*} n 정수인지 확인하기 위한 인자\n * @return {boolean} 정수인지 여부\n */\nexport function isInt(n: unknown): n is number {\n    const v = n as number;\n    return +v === v && !(v % 1);\n}\n\n\n//https://gist.github.com/demouth/3217440\n/**\n * mb_strwidth\n * @see http://php.net/manual/function.mb-strwidth.php\n */\nexport function mb_strwidth(str: string): number {\n    const l = str.length;\n    let length = 0;\n    for (let i = 0; i < l; i++) {\n        const c = str.charCodeAt(i);\n        if (0x0000 <= c && c <= 0x0019) {\n            length += 0;\n        } else if (0x0020 <= c && c <= 0x1FFF) {\n            length += 1;\n        } else if (0x2000 <= c && c <= 0xFF60) {\n            length += 2;\n        } else if (0xFF61 <= c && c <= 0xFF9F) {\n            length += 1;\n        } else if (0xFFA0 <= c) {\n            length += 2;\n        }\n    }\n    return length;\n}\n\n\n/**\n * mb_strimwidth\n * @param String\n * @param int\n * @param int\n * @param String\n * @return String\n * @see http://www.php.net/manual/function.mb-strimwidth.php\n */\nexport function mb_strimwidth(str: string, start: number, width: number, trimmarker = ''): string {\n    const trimmakerWidth = mb_strwidth(trimmarker);\n    const l = str.length;\n    let trimmedLength = 0;\n    const trimmedStr: string[] = [];\n    for (let i = start; i < l; i++) {\n        const c = str.charAt(i);\n        const charWidth = mb_strwidth(c);\n        const next = str.charAt(i + 1);\n        const nextWidth = mb_strwidth(next);\n\n        trimmedLength += charWidth;\n        trimmedStr.push(c);\n        if (trimmedLength + trimmakerWidth + nextWidth > width) {\n            trimmedStr.push(trimmarker);\n            break;\n        }\n    }\n    return trimmedStr.join('');\n}\n\n/**\n * object의 array를 id를 key로 삼는 object로 재 변환\n */\nexport function convertDictById<K extends string | number, T extends { id: K }>(arr: ArrayLike<T>): Record<K, T> {\n    const result: Record<string | number, T> = {};\n    for (const v of Object.values(arr)) {\n        result[v.id] = v;\n    }\n    return result;\n}\n\n/**\n * array를 set 형태의 object로 변환\n */\nexport function convertSet<K extends string | number>(arr: ArrayLike<K>): Record<K, true> {\n    const result: Record<string | number, true> = {};\n    for (const v of Object.values(arr)) {\n        result[v] = true;\n    }\n    return result;\n}\n\n\n/**\n * {0}, {1}, {2}형태로 포맷해주는 함수\n */\n\ndeclare global {\n    interface String {\n        format(...args: (string | number)[]): string;\n    }\n}\nString.prototype.format = function (...args: (string | number)[]) {\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return (typeof args[number] != 'undefined') ? args[number].toString() : match;\n    });\n};\n\n\nexport function hexToRgb(hex: string): { r: number, g: number, b: number } | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\nexport function isBrightColor(color: string): boolean {\n    const cv = unwrap(hexToRgb(color));\n    if ((cv.r * 0.299 + cv.g * 0.587 + cv.b * 0.114) > 140) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * 게임내에서 지원하는 color type만 선택할 수 있도록 해주는 함수\n * @param {string} color #AAAAAA 또는 AAAAAA 형태로 작성된 RGB hex color string\n * @returns {string}\n */\nexport function convColorValue(color: string): string {\n    if (color.charAt(0) == '#') {\n        color = color.substr(1);\n    }\n    color = color.toUpperCase();\n\n    const colorBase = new Set([\n        '000080', '0000FF', '008000', '008080', '00BFFF', '00FF00', '00FFFF', '20B2AA',\n        '2E8B57', '483D8B', '6495ED', '7B68EE', '7CFC00', '7FFFD4', '800000', '800080',\n        '808000', '87CEEB', 'A0522D', 'A9A9A9', 'AFEEEE', 'BA55D3', 'E0FFFF', 'F5F5DC',\n        'FF0000', 'FF00FF', 'FF6347', 'FFA500', 'FFC0CB', 'FFD700', 'FFDAB9', 'FFFF00',\n        'FFFFFF'\n    ]);\n\n    if (!colorBase.has(color)) {\n        return '000000';\n    }\n\n    return color;\n}\n\n\nexport function numberWithCommas(x: number): string {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n//linkify가 불러와 있어야함\ndeclare global {\n    interface Window {\n        linkifyStr: (v: string, k?: Record<string, string | number>) => string;\n    }\n}\nexport function linkifyStrWithOpt(text: string): string {\n    return window.linkifyStr(text, {});\n}\n\n/**\n * 단순한 Template 함수.  <%변수명%>으로 template 가능\n * @see  https://github.com/krasimir/absurd/blob/master/lib/processors/html/helpers/TemplateEngine.js\n * @param {string} html\n * @param {object} options\n * @returns {string}\n */\nexport function TemplateEngine(html: string, options: Record<string | number, unknown> = {}): string {\n    const re = /<%(.+?)%>/g;\n    const reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g;\n    const code = ['with(obj) { var r=[];\\n'];\n    let cursor = 0;\n    const add = function (line: string, js?: boolean) {\n        js ? code.push(line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n            code.push(line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n        return add;\n    }\n    options.e = escapeHtml;\n    options.linkifyStr = linkifyStrWithOpt;\n    for (; ;) {\n        const match = re.exec(html);\n        if (!match) {\n            break;\n        }\n        add(html.slice(cursor, match.index))(match[1], true);\n        cursor = match.index + match[0].length;\n    }\n    add(html.substr(cursor, html.length - cursor));\n\n    code.push('return r.join(\"\"); }');\n    const compiledCode = code.join('').replace(/[\\r\\t\\n]/g, ' ');\n    try {\n        return new Function('obj', compiledCode).apply(options, [options]);\n    } catch (err) {\n        console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n        throw err;\n    }\n}\n\nexport function getIconPath(imgsvr: boolean | 1 | 0, picture: string): string {\n    // ../d_shared/common_path.js 필요\n    if (!imgsvr) {\n        return window.pathConfig.sharedIcon + '/' + picture;\n    } else {\n        return window.pathConfig.root + '/d_pic/' + picture;\n    }\n}\n\nexport function activeFlip($obj?: JQuery<HTMLElement>): void {\n    let $result: JQuery<HTMLElement>;\n    if ($obj === undefined) {\n        $result = $('img[data-flip]');\n    } else {\n        $result = $obj.find('img[data-flip]');\n    }\n\n    $result.each(function () {\n        activeFlipItem($(this));\n    });\n\n}\n\nexport function combineObject<K extends string, V>(item: V[], columnList: K[]): Record<K, V> {\n    const newItem: Record<string, V> = {};\n    for (const columnIdx in columnList) {\n        const columnName = columnList[columnIdx];\n        newItem[columnName] = item[columnIdx];\n    }\n    return newItem;\n}\n\nexport function combineArray<K extends string, V>(array: V[][], columnList: K[]): Record<K, V>[] {\n    const result: Record<K, V>[] = [];\n    for (const key of array.keys()) {\n        const item = array[key];\n        result[key] = combineObject(item, columnList);\n    }\n    return result;\n}\n\nexport function activeFlipItem($img: JQuery<HTMLElement>): void {\n    const imageList = [];\n    imageList.push($img.attr('src'));\n    $.each($img.data('flip').split(','), function (idx, value) {\n        value = $.trim(value);\n        if (!value) {\n            return true;\n        }\n        imageList.push(value);\n    });\n    if (imageList.length <= 1) {\n        return;\n    }\n    $img.data('computed_flip_array', imageList);\n    $img.data('computed_flip_idx', 0);\n\n    $img.click(function () {\n        const arr = $img.data('computed_flip_array');\n        let idx = $img.data('computed_flip_idx');\n        idx = (idx + 1) % (arr.length);\n        $img.attr('src', arr[idx]);\n        $img.data('computed_flip_idx', idx);\n    });\n    $img.css('cursor', 'pointer');\n}\n\n\n\nexport function errUnknown(): void {\n    alert('작업을 실패했습니다.');\n}\n\n\n\nexport function errUnknownToast(): void {\n    jQuery.toast({\n        title: '에러!',\n        content: '작업을 실패했습니다.',\n        type: 'danger',\n        delay: 5000\n    });\n}\n\nexport function quickReject<T>(errMsg: string): JQuery.Promise<T> {\n    if (errMsg === undefined) {\n        errMsg = '작업을 실패했습니다.';\n    }\n    const deferred = $.Deferred();\n    void deferred.reject(errMsg);\n    return deferred.promise();\n}\n\nexport function nl2br(text: string): string {\n    return text.replace(/\\n/g, \"<br>\");\n}\n/*\nfunction br2nl (text) {\n    return text.replace(/<\\s*\\/?br\\s*[\\/]?>/gi, '\\n');\n}\n*/\n\nexport function getNpcColor(npcType: number): 'cyan' | 'skyblue' | null {\n    if (npcType >= 2) {\n        return 'cyan';\n    }\n    if (npcType == 1) {\n        return 'skyblue';\n    }\n    return null;\n}\n\nexport function initTooltip($obj?: JQuery<HTMLElement>): void {\n    if ($obj === undefined) {\n        $obj = $('.obj_tooltip');\n    } else if (!$obj.hasClass('obj_tooltip')) {\n        $obj = $obj.find('.obj_tooltip');\n    }\n    console.log($obj);\n\n    $obj.each(function () {\n        const $target = $(this);\n\n        if ($target.data('installHandler')) {\n            return;\n        }\n        $target.data('installHandler', true);\n\n        $target.mouseover(function () {\n            const $objTooltip = $(this);\n            if ($objTooltip.data('setObjTooltip')) {\n                return;\n            }\n\n            let tooltipClassText = $objTooltip.data('tooltip-class');\n            if (!tooltipClassText) {\n                tooltipClassText = '';\n            }\n            const template = '<div class=\"tooltip {0}\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n                .format(tooltipClassText);\n\n            $objTooltip.tooltip({\n                title: function () {\n                    return $.trim($(this).find('.tooltiptext').html());\n                },\n                template: template,\n                html: true\n            }).tooltip('show');\n\n            $objTooltip.data('setObjTooltip', true);\n        });\n    });\n}","import { isArray, isString, isNumber, isBoolean } from \"lodash\";\n\nexport function convertFormData(values: Record<string, number[]|string[]|boolean[]|number|string|boolean>): FormData{\n    const formData = new FormData();\n\n    const simpleConv = (v: unknown):string=>{\n        if(isString(v)){\n            return v;\n        }\n        if(isNumber(v)){\n            return v.toString();\n        }\n        if(isBoolean(v)){\n            return v?'true':'false';\n        }\n        throw new TypeError('지원하지 않는 formData Type');\n    }\n\n    for(const [key, value] of Object.entries(values)){\n        if(isArray(value)){\n            const arrKey = `${key}[]`;\n            for(const subValue of value){\n                formData.append(arrKey, simpleConv(subValue));\n            }\n            continue;\n        }\n\n        formData.append(key, simpleConv(value));\n    }\n\n    return formData;\n}","import { Nullable } from \"./Nullable\";\nimport { NotNullExpected } from \"./NotNullExpected\";\n\n\nexport function unwrap_any<T>(result: Nullable<unknown>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result as T;\n}\n","import axios from 'axios';\r\nimport $ from 'jquery';\r\nimport { range } from 'lodash';\r\nimport { DateTime } from 'luxon';\r\nimport { errUnknown, getNpcColor } from './common_legacy';\r\nimport { InvalidResponse } from './defs';\r\nimport { unwrap } from \"./util/unwrap\";\r\nimport { convertFormData } from './util/convertFormData';\r\nimport { unwrap_any } from \"./util/unwrap_any\";\r\n\r\ndeclare const maxChiefTurn: number;\r\n\r\ntype TurnDOMObj = {\r\n    turnTime: JQuery<HTMLElement>,\r\n    turnPad: JQuery<HTMLElement>,\r\n    turnText: JQuery<HTMLElement>\r\n};\r\n\r\ntype TableObj = {\r\n    btns: JQuery<HTMLElement>;\r\n    [key: number]: {\r\n        officerLevelText: JQuery<HTMLElement>,\r\n        name: JQuery<HTMLElement>,\r\n        turn: TurnDOMObj[],\r\n    }\r\n}\r\n\r\ntype ChiefResponse = InvalidResponse | {\r\n    result: true,\r\n    date: string,\r\n    nationTurnBrief: {\r\n        name:string|null,\r\n        turnTime:string|null,\r\n        officerLevelText:string,\r\n        npcType:number,\r\n        turn:string\r\n    }[],\r\n    isChief: boolean,\r\n    turnTerm: number\r\n}\r\n\r\nlet filledChiefList: Record<number, boolean> = {};\r\nlet chiefTableObj: TableObj = undefined as unknown as TableObj;//TODO: 매우 지저분하다. class 기반으로 고치던가 할 것\r\n\r\n/*\r\nfunction clearTable() {\r\n    $('.chiefLevelText').html('-');\r\n    $('.chiefTurnTime, .chiefTurnText, .chiefName').html('&nbsp;');\r\n}\r\n*/\r\n\r\nfunction genChiefTableObj(): TableObj {\r\n    const objTable: TableObj = {\r\n        btns: $('#turnPush,#turnPull,#setCommand')\r\n    };\r\n\r\n    for (const chiefIdx of range(5, 13)) {\r\n        const $plate = $('#chief_{0}'.format(chiefIdx));\r\n        const $officerLevelText = $plate.find('.chiefLevelText');\r\n        const $name = $plate.find('.chiefName');\r\n        const turn: TurnDOMObj[] = [];\r\n        for (const turnIdx of range(maxChiefTurn)) {\r\n            const $turn = $plate.find('.turn{0}'.format(turnIdx));\r\n            const $turnTime = $turn.find('.chiefTurnTime');\r\n            const $turnPad = $turn.find('.chiefTurnPad');\r\n            const $turnText = $turn.find('.chiefTurnText');\r\n            turn.push({ turnTime: $turnTime, turnPad: $turnPad, turnText: $turnText });\r\n        }\r\n        objTable[chiefIdx] = {\r\n            officerLevelText: $officerLevelText,\r\n            name: $name,\r\n            turn: turn\r\n        };\r\n    }\r\n\r\n    return objTable;\r\n}\r\n\r\n\r\n\r\nfunction clearChief(chiefIdx: number): void {\r\n    const $plate = $('#chief_{0}'.format(chiefIdx));\r\n    $plate.find('.chiefLevelText').html('-');\r\n    $plate.find('.chiefTurnTime, .chiefTurnText, .chiefName').html('&nbsp;');\r\n}\r\n\r\nasync function reloadTable() {\r\n\r\n    const data: ChiefResponse = await (async () => {\r\n        try {\r\n            const response = await axios({\r\n                url: 'j_getChiefTurn.php',\r\n                responseType: 'json'\r\n            });\r\n            return response.data;\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            errUnknown();\r\n        }\r\n    })();\r\n\r\n    if (!data.result) {\r\n        alert(data.reason);\r\n        return;\r\n    }\r\n    const turnTerm = data.turnTerm;\r\n    const tmpFilledChiefList:Record<number, boolean> = {};\r\n\r\n    if (data.isChief) {\r\n        chiefTableObj.btns.css('visibility', 'visible');\r\n    }\r\n    else {\r\n        chiefTableObj.btns.css('visibility', 'hidden');\r\n    }\r\n    $.each(data.nationTurnBrief, function (chiefIdx, chiefInfo) {\r\n        tmpFilledChiefList[chiefIdx] = true;\r\n        filledChiefList[chiefIdx] = true;\r\n\r\n        const plateObj = chiefTableObj[chiefIdx];\r\n        if (chiefInfo.name) {\r\n            const $name = $('<span>{0}</span>'.format(chiefInfo.name));\r\n            const nameColor = getNpcColor(chiefInfo.npcType);\r\n            if (nameColor) {\r\n                $name.css('color', nameColor);\r\n            }\r\n            plateObj.name.empty().append($name);\r\n        }\r\n        else {\r\n            plateObj.name.html('');\r\n        }\r\n\r\n        plateObj.officerLevelText.text(chiefInfo.officerLevelText);\r\n\r\n        let turnTimeObj: DateTime|undefined;\r\n\r\n        if (chiefInfo.turnTime) {\r\n            turnTimeObj = DateTime.fromSQL(chiefInfo.turnTime);\r\n        }\r\n\r\n        const turnList = plateObj.turn;\r\n        $.each(chiefInfo.turn, function (turnIdx, turnText) {\r\n            if (turnTimeObj) {\r\n                turnList[turnIdx].turnTime.text(turnTimeObj.toFormat('HH:mm'));\r\n            }\r\n            else {\r\n                turnList[turnIdx].turnTime.text('');\r\n            }\r\n\r\n            turnList[turnIdx].turnText.html(turnText).css('font-size', '13px');\r\n            const oWidth = unwrap(turnList[turnIdx].turnPad.innerWidth());\r\n            const iWidth = unwrap(turnList[turnIdx].turnText.outerWidth());\r\n            if (iWidth > oWidth * 0.95) {\r\n                const newFontSize = 13 * oWidth / iWidth * 0.9;\r\n                turnList[turnIdx].turnText.css('font-size', '{0}px'.format(newFontSize));\r\n            }\r\n            if (turnTimeObj) {\r\n                turnTimeObj = turnTimeObj.plus({'minutes': turnTerm});\r\n            }\r\n\r\n        });\r\n    });\r\n\r\n    for (const idx of range(5, 13)) {\r\n        if (idx in tmpFilledChiefList) {\r\n            continue;\r\n        }\r\n        if (idx in filledChiefList) {\r\n            clearChief(idx);\r\n        }\r\n    }\r\n    filledChiefList = tmpFilledChiefList;\r\n}\r\n\r\nasync function reserveTurn(turnList: number[], command: string) {\r\n    console.log(turnList, command);\r\n    try{\r\n\r\n        const response = await axios({\r\n            url: 'j_set_chief_command.php',\r\n            responseType:'json',\r\n            method: 'post',\r\n            data: convertFormData({\r\n                turnList,\r\n                action: command\r\n            })\r\n        });\r\n\r\n        const data: InvalidResponse = response.data;\r\n\r\n        if (!data.result) {\r\n            alert(data.reason);\r\n        }\r\n        await reloadTable();\r\n    }\r\n    catch(e){\r\n        console.error(e);\r\n        errUnknown();\r\n    }\r\n}\r\n\r\nasync function pushTurn(turnCnt: number) {\r\n    try {\r\n        const response = await axios({\r\n            url: 'j_chief_turn.php',\r\n            responseType: 'json',\r\n            method: 'post',\r\n            data: convertFormData({\r\n                amount: turnCnt\r\n            })\r\n        });\r\n        const data = response.data;\r\n        if (!data.result) {\r\n            alert(data.reason);\r\n        }\r\n        await reloadTable();\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        errUnknown();\r\n    }\r\n}\r\n\r\njQuery(function ($) {\r\n\r\n    chiefTableObj = genChiefTableObj();\r\n    void reloadTable();\r\n    $('#reloadTable').on('click', reloadTable);\r\n    $('#setCommand').on('click', function () {\r\n        const turnList = unwrap_any<string[]>($('#chiefTurnSelector').val()).map(function (v) { return parseInt(v); });\r\n        const $command = $('#chiefCommandList option:selected');\r\n        if ($command.data('reqarg')) {\r\n            $.redirect(\r\n                \"b_processing.php\", {\r\n                command: unwrap($command.val()),\r\n                turnList: turnList.join('_'),\r\n                is_chief: true\r\n            }, \"GET\");\r\n        }\r\n        else {\r\n            void reserveTurn(turnList, unwrap_any<string>($command.val()));\r\n        }\r\n        return false;\r\n    });\r\n\r\n    $('#turnPush').on('click', function () {\r\n        void pushTurn(1);\r\n        return false;\r\n    });\r\n\r\n    $('#turnPull').on('click', function () {\r\n        void pushTurn(-1);\r\n        return false;\r\n    });\r\n\r\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 310;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t310: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhidche_lib\"] = self[\"webpackChunkhidche_lib\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(8464)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","NotNullExpected","TypeError","result","errUnknown","alert","getNpcColor","npcType","String","prototype","format","args","this","replace","match","number","toString","convertFormData","values","formData","FormData","simpleConv","v","Object","entries","key","value","arrKey","subValue","append","unwrap_any","filledChiefList","chiefTableObj","undefined","clearChief","chiefIdx","$plate","find","html","reloadTable","url","responseType","response","data","console","error","reason","turnTerm","tmpFilledChiefList","isChief","btns","css","nationTurnBrief","chiefInfo","turnTimeObj","plateObj","name","$name","nameColor","empty","officerLevelText","text","turnTime","turnList","turn","turnIdx","turnText","toFormat","oWidth","turnPad","innerWidth","iWidth","outerWidth","newFontSize","plus","idx","command","log","method","action","pushTurn","turnCnt","amount","jQuery","$","objTable","$officerLevelText","maxChiefTurn","$turn","$turnTime","$turnPad","$turnText","push","genChiefTableObj","on","val","map","parseInt","$command","redirect","join","is_chief","reserveTurn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}