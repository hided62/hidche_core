{"version":3,"file":"board.js","mappings":"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","sources":["webpack://hidche_lib/webpack/runtime/chunk loaded","webpack://hidche_lib/./hwe/ts/util/NotNullExpected.ts","webpack://hidche_lib/./hwe/ts/common_legacy.ts","webpack://hidche_lib/./hwe/ts/util/convertFormData.ts","webpack://hidche_lib/./hwe/ts/util/unwrap_any.ts","webpack://hidche_lib/./hwe/ts/board.ts","webpack://hidche_lib/./hwe/ts/util/setAxiosXMLHttpRequest.ts","webpack://hidche_lib/webpack/bootstrap","webpack://hidche_lib/webpack/runtime/compat get default export","webpack://hidche_lib/webpack/runtime/define property getters","webpack://hidche_lib/webpack/runtime/global","webpack://hidche_lib/webpack/runtime/hasOwnProperty shorthand","webpack://hidche_lib/webpack/runtime/make namespace object","webpack://hidche_lib/webpack/runtime/node module decorator","webpack://hidche_lib/webpack/runtime/runtimeId","webpack://hidche_lib/webpack/runtime/jsonp chunk loading","webpack://hidche_lib/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\nexport class NotNullExpected extends TypeError {\n    public name = 'NotNullExpected';\n}\n","import { unwrap } from \"./util/unwrap\";\n\nimport jQuery from \"jquery\";\nimport 'bootstrap';\n\nimport axios from \"axios\";\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n//TODO: X-Requested-With 믿지 말자.\n\n/**\n * <>& 등을 html에서도 그대로 보이도록 escape주는 함수\n * @see https://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n */\nexport const escapeHtml = (() => {\n    const entityMap: { [v: string]: string } = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n    };\n\n    return function (string: string) {\n        return String(string).replace(/[&<>\"'`=/]/g, function (s: string) {\n            return entityMap[s];\n        });\n    }\n})();\n\n/**\n * 변수가 정수인지 확인하는 함수\n * @param {*} n 정수인지 확인하기 위한 인자\n * @return {boolean} 정수인지 여부\n */\nexport function isInt(n: unknown): n is number {\n    const v = n as number;\n    return +v === v && !(v % 1);\n}\n\n\n//https://gist.github.com/demouth/3217440\n/**\n * mb_strwidth\n * @see http://php.net/manual/function.mb-strwidth.php\n */\nexport function mb_strwidth(str: string): number {\n    const l = str.length;\n    let length = 0;\n    for (let i = 0; i < l; i++) {\n        const c = str.charCodeAt(i);\n        if (0x0000 <= c && c <= 0x0019) {\n            length += 0;\n        } else if (0x0020 <= c && c <= 0x1FFF) {\n            length += 1;\n        } else if (0x2000 <= c && c <= 0xFF60) {\n            length += 2;\n        } else if (0xFF61 <= c && c <= 0xFF9F) {\n            length += 1;\n        } else if (0xFFA0 <= c) {\n            length += 2;\n        }\n    }\n    return length;\n}\n\n\n/**\n * mb_strimwidth\n * @param String\n * @param int\n * @param int\n * @param String\n * @return String\n * @see http://www.php.net/manual/function.mb-strimwidth.php\n */\nexport function mb_strimwidth(str: string, start: number, width: number, trimmarker = ''): string {\n    const trimmakerWidth = mb_strwidth(trimmarker);\n    const l = str.length;\n    let trimmedLength = 0;\n    const trimmedStr: string[] = [];\n    for (let i = start; i < l; i++) {\n        const c = str.charAt(i);\n        const charWidth = mb_strwidth(c);\n        const next = str.charAt(i + 1);\n        const nextWidth = mb_strwidth(next);\n\n        trimmedLength += charWidth;\n        trimmedStr.push(c);\n        if (trimmedLength + trimmakerWidth + nextWidth > width) {\n            trimmedStr.push(trimmarker);\n            break;\n        }\n    }\n    return trimmedStr.join('');\n}\n\n/**\n * object의 array를 id를 key로 삼는 object로 재 변환\n */\nexport function convertDictById<K extends string | number, T extends { id: K }>(arr: ArrayLike<T>): Record<K, T> {\n    const result: Record<string | number, T> = {};\n    for (const v of Object.values(arr)) {\n        result[v.id] = v;\n    }\n    return result;\n}\n\n/**\n * array를 set 형태의 object로 변환\n */\nexport function convertSet<K extends string | number>(arr: ArrayLike<K>): Record<K, true> {\n    const result: Record<string | number, true> = {};\n    for (const v of Object.values(arr)) {\n        result[v] = true;\n    }\n    return result;\n}\n\n\n/**\n * {0}, {1}, {2}형태로 포맷해주는 함수\n */\n\ndeclare global {\n    interface String {\n        format(...args: (string | number)[]): string;\n    }\n}\nString.prototype.format = function (...args: (string | number)[]) {\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return (typeof args[number] != 'undefined') ? args[number].toString() : match;\n    });\n};\n\n\nexport function hexToRgb(hex: string): { r: number, g: number, b: number } | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\nexport function isBrightColor(color: string): boolean {\n    const cv = unwrap(hexToRgb(color));\n    if ((cv.r * 0.299 + cv.g * 0.587 + cv.b * 0.114) > 140) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * 게임내에서 지원하는 color type만 선택할 수 있도록 해주는 함수\n * @param {string} color #AAAAAA 또는 AAAAAA 형태로 작성된 RGB hex color string\n * @returns {string}\n */\nexport function convColorValue(color: string): string {\n    if (color.charAt(0) == '#') {\n        color = color.substr(1);\n    }\n    color = color.toUpperCase();\n\n    const colorBase = new Set([\n        '000080', '0000FF', '008000', '008080', '00BFFF', '00FF00', '00FFFF', '20B2AA',\n        '2E8B57', '483D8B', '6495ED', '7B68EE', '7CFC00', '7FFFD4', '800000', '800080',\n        '808000', '87CEEB', 'A0522D', 'A9A9A9', 'AFEEEE', 'BA55D3', 'E0FFFF', 'F5F5DC',\n        'FF0000', 'FF00FF', 'FF6347', 'FFA500', 'FFC0CB', 'FFD700', 'FFDAB9', 'FFFF00',\n        'FFFFFF'\n    ]);\n\n    if (!colorBase.has(color)) {\n        return '000000';\n    }\n\n    return color;\n}\n\n\nexport function numberWithCommas(x: number): string {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n//linkify가 불러와 있어야함\ndeclare global {\n    interface Window {\n        linkifyStr: (v: string, k?: Record<string, string | number>) => string;\n    }\n}\nexport function linkifyStrWithOpt(text: string): string {\n    return window.linkifyStr(text, {});\n}\n\n/**\n * 단순한 Template 함수.  <%변수명%>으로 template 가능\n * @see  https://github.com/krasimir/absurd/blob/master/lib/processors/html/helpers/TemplateEngine.js\n * @param {string} html\n * @param {object} options\n * @returns {string}\n */\nexport function TemplateEngine(html: string, options: Record<string | number, unknown> = {}): string {\n    const re = /<%(.+?)%>/g;\n    const reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g;\n    const code = ['with(obj) { var r=[];\\n'];\n    let cursor = 0;\n    const add = function (line: string, js?: boolean) {\n        js ? code.push(line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n            code.push(line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n        return add;\n    }\n    options.e = escapeHtml;\n    options.linkifyStr = linkifyStrWithOpt;\n    for (; ;) {\n        const match = re.exec(html);\n        if (!match) {\n            break;\n        }\n        add(html.slice(cursor, match.index))(match[1], true);\n        cursor = match.index + match[0].length;\n    }\n    add(html.substr(cursor, html.length - cursor));\n\n    code.push('return r.join(\"\"); }');\n    const compiledCode = code.join('').replace(/[\\r\\t\\n]/g, ' ');\n    try {\n        return new Function('obj', compiledCode).apply(options, [options]);\n    } catch (err) {\n        console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n        throw err;\n    }\n}\n\nexport function getIconPath(imgsvr: boolean | 1 | 0, picture: string): string {\n    // ../d_shared/common_path.js 필요\n    if (!imgsvr) {\n        return window.pathConfig.sharedIcon + '/' + picture;\n    } else {\n        return window.pathConfig.root + '/d_pic/' + picture;\n    }\n}\n\nexport function activeFlip($obj?: JQuery<HTMLElement>): void {\n    let $result: JQuery<HTMLElement>;\n    if ($obj === undefined) {\n        $result = $('img[data-flip]');\n    } else {\n        $result = $obj.find('img[data-flip]');\n    }\n\n    $result.each(function () {\n        activeFlipItem($(this));\n    });\n\n}\n\nexport function combineObject<K extends string, V>(item: V[], columnList: K[]): Record<K, V> {\n    const newItem: Record<string, V> = {};\n    for (const columnIdx in columnList) {\n        const columnName = columnList[columnIdx];\n        newItem[columnName] = item[columnIdx];\n    }\n    return newItem;\n}\n\nexport function combineArray<K extends string, V>(array: V[][], columnList: K[]): Record<K, V>[] {\n    const result: Record<K, V>[] = [];\n    for (const key of array.keys()) {\n        const item = array[key];\n        result[key] = combineObject(item, columnList);\n    }\n    return result;\n}\n\nexport function activeFlipItem($img: JQuery<HTMLElement>): void {\n    const imageList = [];\n    imageList.push($img.attr('src'));\n    $.each($img.data('flip').split(','), function (idx, value) {\n        value = $.trim(value);\n        if (!value) {\n            return true;\n        }\n        imageList.push(value);\n    });\n    if (imageList.length <= 1) {\n        return;\n    }\n    $img.data('computed_flip_array', imageList);\n    $img.data('computed_flip_idx', 0);\n\n    $img.click(function () {\n        const arr = $img.data('computed_flip_array');\n        let idx = $img.data('computed_flip_idx');\n        idx = (idx + 1) % (arr.length);\n        $img.attr('src', arr[idx]);\n        $img.data('computed_flip_idx', idx);\n    });\n    $img.css('cursor', 'pointer');\n}\n\n\n\nexport function errUnknown(): void {\n    alert('작업을 실패했습니다.');\n}\n\n\n\nexport function errUnknownToast(): void {\n    jQuery.toast({\n        title: '에러!',\n        content: '작업을 실패했습니다.',\n        type: 'danger',\n        delay: 5000\n    });\n}\n\nexport function quickReject<T>(errMsg: string): JQuery.Promise<T> {\n    if (errMsg === undefined) {\n        errMsg = '작업을 실패했습니다.';\n    }\n    const deferred = $.Deferred();\n    void deferred.reject(errMsg);\n    return deferred.promise();\n}\n\nexport function nl2br(text: string): string {\n    return text.replace(/\\n/g, \"<br>\");\n}\n/*\nfunction br2nl (text) {\n    return text.replace(/<\\s*\\/?br\\s*[\\/]?>/gi, '\\n');\n}\n*/\n\nexport function getNpcColor(npcType: number): 'cyan' | 'skyblue' | null {\n    if (npcType >= 2) {\n        return 'cyan';\n    }\n    if (npcType == 1) {\n        return 'skyblue';\n    }\n    return null;\n}\n\nexport function initTooltip($obj?: JQuery<HTMLElement>): void {\n    if ($obj === undefined) {\n        $obj = $('.obj_tooltip');\n    } else if (!$obj.hasClass('obj_tooltip')) {\n        $obj = $obj.find('.obj_tooltip');\n    }\n    console.log($obj);\n\n    $obj.each(function () {\n        const $target = $(this);\n\n        if ($target.data('installHandler')) {\n            return;\n        }\n        $target.data('installHandler', true);\n\n        $target.mouseover(function () {\n            const $objTooltip = $(this);\n            if ($objTooltip.data('setObjTooltip')) {\n                return;\n            }\n\n            let tooltipClassText = $objTooltip.data('tooltip-class');\n            if (!tooltipClassText) {\n                tooltipClassText = '';\n            }\n            const template = '<div class=\"tooltip {0}\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n                .format(tooltipClassText);\n\n            $objTooltip.tooltip({\n                title: function () {\n                    return $.trim($(this).find('.tooltiptext').html());\n                },\n                template: template,\n                html: true\n            }).tooltip('show');\n\n            $objTooltip.data('setObjTooltip', true);\n        });\n    });\n}","import { isArray, isString, isNumber, isBoolean } from \"lodash\";\n\nexport function convertFormData(values: Record<string, number[]|string[]|boolean[]|number|string|boolean>): FormData{\n    const formData = new FormData();\n\n    const simpleConv = (v: unknown):string=>{\n        if(isString(v)){\n            return v;\n        }\n        if(isNumber(v)){\n            return v.toString();\n        }\n        if(isBoolean(v)){\n            return v?'true':'false';\n        }\n        throw new TypeError('지원하지 않는 formData Type');\n    }\n\n    for(const [key, value] of Object.entries(values)){\n        if(isArray(value)){\n            const arrKey = `${key}[]`;\n            for(const subValue of value){\n                formData.append(arrKey, simpleConv(subValue));\n            }\n            continue;\n        }\n\n        formData.append(key, simpleConv(value));\n    }\n\n    return formData;\n}","import { Nullable } from \"./Nullable\";\nimport { NotNullExpected } from \"./NotNullExpected\";\n\n\nexport function unwrap_any<T>(result: Nullable<unknown>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result as T;\n}\n","\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { trim } from 'lodash';\nimport { escapeHtml, nl2br } from './common_legacy';\nimport { InvalidResponse } from './defs';\nimport { convertFormData } from './util/convertFormData';\nimport { setAxiosXMLHttpRequest } from './util/setAxiosXMLHttpRequest';\nimport { unwrap_any } from './util/unwrap_any';\n\ndeclare const isSecretBoard: boolean;\n\ntype BoardResponse = {\n    result: true,\n    articles: Record<number, BoardArticle>,\n}\n\ntype BoardArticle = {\n    no: number,\n    nation_no: number,\n    is_secret?: boolean,\n    date: string,\n    general_no: number,\n    author: string,\n    author_icon: string,\n    title: string,\n    text: string,\n    comment: BoardComment[],\n}\n\ntype BoardComment = {\n    no: number,\n    nation_no: number,\n    is_secret?: boolean,\n    date: string,\n    document_no: number,\n    general_no: number,\n    author: string,\n    text: string,\n}\n\nasync function submitArticle(e: JQuery.Event) {\n    e.preventDefault();\n\n    const $article = $('#newArticle');\n    const $title = $article.find('.titleInput');\n    const $text = $article.find('.contentInput');\n    const title = trim(unwrap_any<string>($title.val()));\n    const text = trim(unwrap_any<string>($text.val()));\n\n\n    if (!text && !title) {\n        return false;\n    }\n\n    let result: InvalidResponse;\n\n    try {\n        const response = await axios({\n            url: 'j_board_article_add.php',\n            method: 'post',\n            responseType: 'json',\n            data: convertFormData({\n                isSecret: isSecretBoard,\n                title: title,\n                text: text\n            })\n        });\n        result = response.data;\n    }\n    catch(e){\n        console.error(e);\n        alert(`실패했습니다. :${e}`);\n        return;\n    }\n\n    if(!result.result){\n        alert(`글을 올리는데 실패했습니다. ${result.reason}`);\n        return;\n    }\n\n    $title.val('');\n    $text.val('');\n\n    void loadArticles();\n}\n\nasync function submitComment(this: HTMLElement, e: JQuery.Event) {\n    e.preventDefault();\n\n    const $this = $(this);\n\n    const $article = $this.closest('.articleObj').eq(0);\n    const articleNo = $article.data('no');\n    const $text = $article.find('input.commentText');\n    const text = trim(unwrap_any<string>($text.val()));\n\n    if (!text) {\n        return;\n    }\n\n\n    let result: InvalidResponse;\n\n\n    try {\n        const response = await axios({\n            url: 'j_board_comment_add.php',\n            method: 'post',\n            responseType: 'json',\n            data: convertFormData({\n                articleNo: articleNo,\n                text: text\n            })\n        });\n        result = response.data;\n    }\n    catch(e){\n        console.error(e);\n        alert(`실패했습니다. :${e}`);\n        return;\n    }\n\n    if(!result.result){\n        alert(`댓글을 다는데 실패했습니다. ${result.reason}`);\n        return;\n    }\n\n    $text.val('');\n\n    void loadArticles();\n\n    return false;\n}\n\nfunction drawArticle(articleObj: BoardArticle) {\n    const $articleFrame = $('#articleTemplate > .articleFrame');\n    const $commentFrame = $($('#commentTemplate').prop('content'));\n\n    const $article = $articleFrame.clone();\n    $article.addClass('articleObj')\n        .data('no', articleObj.no)\n        .data('author', articleObj.general_no);\n\n\n    $article.find('.articleNo').text(articleObj.no);\n    $article.find('.authorName').text(articleObj.author);\n    $article.find('.articleTitle').text(articleObj.title);\n    $article.find('.date').text(articleObj.date);\n    if (articleObj.author_icon) {\n        $article.find('.authorIcon').attr('src', articleObj.author_icon);\n    }\n    //$article.find('.text').text(articleObj.text);\n    $article.find('.text').html(nl2br(escapeHtml(articleObj.text)));\n    //TODO: 바꿀 것\n\n    const $articleComment = $article.find('.commentList');\n\n    for (const commentObj of articleObj.comment) {\n        const $comment = $commentFrame.clone();\n        $comment.find('.author').text(commentObj.author);\n        //$comment.find('.text').text(commentObj.text);\n        $comment.find('.text').html(nl2br(escapeHtml(commentObj.text)));\n        $comment.find('.date').text(commentObj.date);\n        $articleComment.append($comment);\n    }\n\n    $article.find('.submitComment').on('click', submitComment);\n    $article.find('.commentText').on('keypress', function (e) {\n        if (e.which === 13) {\n            $article.find('.submitComment').trigger('click');\n        }\n    });\n    $article.find('.inputCommentHeader').click(function () {\n        $article.find('.commentText').trigger('focus');\n    })\n\n    const $board = $('#board');\n\n    $board.prepend($article);\n}\n\nfunction drawArticles(articlesObj: BoardResponse | InvalidResponse) {\n    if (!articlesObj.result) {\n        alert(`에러: ${articlesObj.reason}`);\n        return;\n    }\n\n    $('.articleObj').detach();//첫 버전이니까 일괄 삭제 일괄 로드\n    for (const article of Object.values(articlesObj.articles)) {\n        drawArticle(article);\n    }\n}\n\n\n\nasync function loadArticles() {\n    try {\n        const response = await axios({\n            url: 'j_board_get_articles.php',\n            responseType: 'json',\n            method: 'post',\n            data: convertFormData({\n                isSecret: isSecretBoard\n            })\n        });\n        drawArticles(response.data);\n    }\n    catch (e) {\n        console.error(e);\n        alert(`에러: ${e}`);\n        return;\n    }\n    return $.post({\n        url: 'j_board_get_articles.php',\n        dataType: 'json',\n        data: {\n            isSecret: isSecretBoard, //첫 버전이니까 전체 다 불러오자\n        }\n    });\n}\n\nfunction resizeTextarea($obj: JQuery<HTMLElement>) {\n    $obj.height(1).height($obj.prop('scrollHeight') + 12);\n}\n\n$(function () {\n    setAxiosXMLHttpRequest();\n\n    $('textarea.autosize').on('keydown keyup', function () {\n        resizeTextarea($(this));\n    })\n\n    $('#submitArticle').on('click', submitArticle);\n\n    void loadArticles();\n\n});","import axios from \"axios\";\n\nexport function setAxiosXMLHttpRequest(): void{\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    //TODO: X-Requested-With 믿지 말자.\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 198;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t198: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhidche_lib\"] = self[\"webpackChunkhidche_lib\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5693)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","TypeError","entityMap","escapeHtml","string","String","replace","s","nl2br","text","prototype","format","args","this","match","number","toString","convertFormData","values","formData","FormData","simpleConv","v","Object","entries","key","value","arrKey","subValue","append","unwrap_any","result","submitArticle","e","preventDefault","$article","$title","find","$text","title","val","url","method","responseType","data","isSecret","isSecretBoard","response","console","error","alert","reason","loadArticles","submitComment","$this","closest","eq","articleNo","drawArticle","articleObj","$articleFrame","$commentFrame","prop","clone","addClass","no","general_no","author","date","author_icon","attr","html","$articleComment","comment","commentObj","$comment","on","which","trigger","click","prepend","drawArticles","articlesObj","detach","articles","dataType","$obj","height","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}