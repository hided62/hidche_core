{"version":3,"file":"entrance.js","mappings":"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","sources":["webpack://hidche_lib/webpack/runtime/chunk loaded","webpack://hidche_lib/./hwe/ts/util.ts","webpack://hidche_lib/./hwe/ts/common_legacy.ts","webpack://hidche_lib/./hwe/ts/util/getDateTimeNow.ts","webpack://hidche_lib/./ts/entrance.ts","webpack://hidche_lib/./hwe/ts/util/setAxiosXMLHttpRequest.ts","webpack://hidche_lib/webpack/bootstrap","webpack://hidche_lib/webpack/runtime/amd options","webpack://hidche_lib/webpack/runtime/compat get default export","webpack://hidche_lib/webpack/runtime/define property getters","webpack://hidche_lib/webpack/runtime/global","webpack://hidche_lib/webpack/runtime/hasOwnProperty shorthand","webpack://hidche_lib/webpack/runtime/make namespace object","webpack://hidche_lib/webpack/runtime/jsonp chunk loading","webpack://hidche_lib/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","type ErrType<T> = { new(msg?: string): T }\nexport type Nullable<T> = T | null | undefined\n\nexport class RuntimeError extends Error {\n    public name = 'RuntimeError';\n    constructor(public message: string = '') {\n        super(message);\n    }\n    toString(): string {\n        if (this.message) {\n            return this.name + ': ' + this.message;\n        }\n        else {\n            return this.name;\n        }\n    }\n}\n\nexport class NotNullExpected extends RuntimeError {\n    public name = 'NotNullExpected';\n}\n\nexport function unwrap<T>(result: Nullable<T>): T {\n    if (result === null || result === undefined) {\n        throw new NotNullExpected();\n    }\n    return result;\n}\n\nexport function unwrap_err<T, ErrT extends Error>(result: Nullable<T>, errType: ErrType<ErrT>, errMsg?: string): T {\n    if (result === null || result === undefined) {\n        throw new errType(errMsg);\n    }\n    return result;\n}","import { unwrap } from \"./util\";\n\nimport jQuery from \"jquery\";\nimport 'bootstrap';\n\nimport axios from \"axios\";\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n//TODO: X-Requested-With 믿지 말자.\n\n/** \n * <>& 등을 html에서도 그대로 보이도록 escape주는 함수\n * @see https://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery\n */\nexport const escapeHtml = (() => {\n    const entityMap: { [v: string]: string } = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;',\n        '`': '&#x60;',\n        '=': '&#x3D;'\n    };\n\n    return function (string: string) {\n        return String(string).replace(/[&<>\"'`=/]/g, function (s: string) {\n            return entityMap[s];\n        });\n    }\n})();\n\n/**\n * 변수가 정수인지 확인하는 함수\n * @param {*} n 정수인지 확인하기 위한 인자\n * @return {boolean} 정수인지 여부\n */\nexport function isInt(n: unknown): n is number {\n    const v = n as number;\n    return +v === v && !(v % 1);\n}\n\n\n//https://gist.github.com/demouth/3217440\n/**\n * mb_strwidth\n * @see http://php.net/manual/function.mb-strwidth.php\n */\nexport function mb_strwidth(str: string): number {\n    const l = str.length;\n    let length = 0;\n    for (let i = 0; i < l; i++) {\n        const c = str.charCodeAt(i);\n        if (0x0000 <= c && c <= 0x0019) {\n            length += 0;\n        } else if (0x0020 <= c && c <= 0x1FFF) {\n            length += 1;\n        } else if (0x2000 <= c && c <= 0xFF60) {\n            length += 2;\n        } else if (0xFF61 <= c && c <= 0xFF9F) {\n            length += 1;\n        } else if (0xFFA0 <= c) {\n            length += 2;\n        }\n    }\n    return length;\n}\n\n\n/**\n * mb_strimwidth\n * @param String\n * @param int\n * @param int\n * @param String\n * @return String\n * @see http://www.php.net/manual/function.mb-strimwidth.php\n */\nexport function mb_strimwidth(str: string, start: number, width: number, trimmarker = ''): string {\n    const trimmakerWidth = mb_strwidth(trimmarker);\n    const l = str.length;\n    let trimmedLength = 0;\n    const trimmedStr: string[] = [];\n    for (let i = start; i < l; i++) {\n        const c = str.charAt(i);\n        const charWidth = mb_strwidth(c);\n        const next = str.charAt(i + 1);\n        const nextWidth = mb_strwidth(next);\n\n        trimmedLength += charWidth;\n        trimmedStr.push(c);\n        if (trimmedLength + trimmakerWidth + nextWidth > width) {\n            trimmedStr.push(trimmarker);\n            break;\n        }\n    }\n    return trimmedStr.join('');\n}\n\n/**\n * object의 array를 id를 key로 삼는 object로 재 변환\n */\nexport function convertDictById<K extends string | number, T extends { id: K }>(arr: ArrayLike<T>): Record<K, T> {\n    const result: Record<string | number, T> = {};\n    for (const v of Object.values(arr)) {\n        result[v.id] = v;\n    }\n    return result;\n}\n\n/**\n * array를 set 형태의 object로 변환\n */\nexport function convertSet<K extends string | number>(arr: ArrayLike<K>): Record<K, true> {\n    const result: Record<string | number, true> = {};\n    for (const v of Object.values(arr)) {\n        result[v] = true;\n    }\n    return result;\n}\n\n\n/** \n * {0}, {1}, {2}형태로 포맷해주는 함수\n */\n\ndeclare global {\n    interface String {\n        format(...args: (string | number)[]): string;\n    }\n}\nString.prototype.format = function (...args: (string | number)[]) {\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return (typeof args[number] != 'undefined') ? args[number].toString() : match;\n    });\n};\n\n\nexport function hexToRgb(hex: string): { r: number, g: number, b: number } | null {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : null;\n}\n\nexport function isBrightColor(color: string): boolean {\n    const cv = unwrap(hexToRgb(color));\n    if ((cv.r * 0.299 + cv.g * 0.587 + cv.b * 0.114) > 140) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * 게임내에서 지원하는 color type만 선택할 수 있도록 해주는 함수\n * @param {string} color #AAAAAA 또는 AAAAAA 형태로 작성된 RGB hex color string\n * @returns {string}\n */\nexport function convColorValue(color: string): string {\n    if (color.charAt(0) == '#') {\n        color = color.substr(1);\n    }\n    color = color.toUpperCase();\n\n    const colorBase = new Set([\n        '000080', '0000FF', '008000', '008080', '00BFFF', '00FF00', '00FFFF', '20B2AA',\n        '2E8B57', '483D8B', '6495ED', '7B68EE', '7CFC00', '7FFFD4', '800000', '800080',\n        '808000', '87CEEB', 'A0522D', 'A9A9A9', 'AFEEEE', 'BA55D3', 'E0FFFF', 'F5F5DC',\n        'FF0000', 'FF00FF', 'FF6347', 'FFA500', 'FFC0CB', 'FFD700', 'FFDAB9', 'FFFF00',\n        'FFFFFF'\n    ]);\n\n    if (!colorBase.has(color)) {\n        return '000000';\n    }\n\n    return color;\n}\n\n\nexport function numberWithCommas(x: number): string {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n//linkify가 불러와 있어야함\ndeclare global {\n    interface Window {\n        linkifyStr: (v: string, k?: Record<string, string | number>) => string;\n    }\n}\nexport function linkifyStrWithOpt(text: string): string {\n    return window.linkifyStr(text, {});\n}\n\n/**\n * 단순한 Template 함수.  <%변수명%>으로 template 가능\n * @see  https://github.com/krasimir/absurd/blob/master/lib/processors/html/helpers/TemplateEngine.js\n * @param {string} html \n * @param {object} options \n * @returns {string}\n */\nexport function TemplateEngine(html: string, options: Record<string | number, unknown> = {}): string {\n    const re = /<%(.+?)%>/g;\n    const reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g;\n    const code = ['with(obj) { var r=[];\\n'];\n    let cursor = 0;\n    const add = function (line: string, js?: boolean) {\n        js ? code.push(line.match(reExp) ? line + '\\n' : 'r.push(' + line + ');\\n') :\n            code.push(line != '' ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : '');\n        return add;\n    }\n    options.e = escapeHtml;\n    options.linkifyStr = linkifyStrWithOpt;\n    for (; ;) {\n        const match = re.exec(html);\n        if (!match) {\n            break;\n        }\n        add(html.slice(cursor, match.index))(match[1], true);\n        cursor = match.index + match[0].length;\n    }\n    add(html.substr(cursor, html.length - cursor));\n\n    code.push('return r.join(\"\"); }');\n    const compiledCode = code.join('').replace(/[\\r\\t\\n]/g, ' ');\n    try {\n        return new Function('obj', compiledCode).apply(options, [options]);\n    } catch (err) {\n        console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n        throw err;\n    }\n}\n\nexport function getIconPath(imgsvr: boolean | 1 | 0, picture: string): string {\n    // ../d_shared/common_path.js 필요\n    if (!imgsvr) {\n        return window.pathConfig.sharedIcon + '/' + picture;\n    } else {\n        return window.pathConfig.root + '/d_pic/' + picture;\n    }\n}\n\nexport function activeFlip($obj?: JQuery<HTMLElement>): void {\n    let $result: JQuery<HTMLElement>;\n    if ($obj === undefined) {\n        $result = $('img[data-flip]');\n    } else {\n        $result = $obj.find('img[data-flip]');\n    }\n\n    $result.each(function () {\n        activeFlipItem($(this));\n    });\n\n}\n\nexport function combineObject<K extends string, V>(item: V[], columnList: K[]): Record<K, V> {\n    const newItem: Record<string, V> = {};\n    for (const columnIdx in columnList) {\n        const columnName = columnList[columnIdx];\n        newItem[columnName] = item[columnIdx];\n    }\n    return newItem;\n}\n\nexport function combineArray<K extends string, V>(array: V[][], columnList: K[]): Record<K, V>[] {\n    const result: Record<K, V>[] = [];\n    for (const key of array.keys()) {\n        const item = array[key];\n        result[key] = combineObject(item, columnList);\n    }\n    return result;\n}\n\nexport function activeFlipItem($img: JQuery<HTMLElement>): void {\n    const imageList = [];\n    imageList.push($img.attr('src'));\n    $.each($img.data('flip').split(','), function (idx, value) {\n        value = $.trim(value);\n        if (!value) {\n            return true;\n        }\n        imageList.push(value);\n    });\n    if (imageList.length <= 1) {\n        return;\n    }\n    $img.data('computed_flip_array', imageList);\n    $img.data('computed_flip_idx', 0);\n\n    $img.click(function () {\n        const arr = $img.data('computed_flip_array');\n        let idx = $img.data('computed_flip_idx');\n        idx = (idx + 1) % (arr.length);\n        $img.attr('src', arr[idx]);\n        $img.data('computed_flip_idx', idx);\n    });\n    $img.css('cursor', 'pointer');\n}\n\n\n\nexport function errUnknown(): void {\n    alert('작업을 실패했습니다.');\n}\n\n\n\nexport function errUnknownToast(): void {\n    jQuery.toast({\n        title: '에러!',\n        content: '작업을 실패했습니다.',\n        type: 'danger',\n        delay: 5000\n    });\n}\n\nexport function quickReject<T>(errMsg: string): JQuery.Promise<T> {\n    if (errMsg === undefined) {\n        errMsg = '작업을 실패했습니다.';\n    }\n    const deferred = $.Deferred();\n    void deferred.reject(errMsg);\n    return deferred.promise();\n}\n\nexport function nl2br(text: string): string {\n    return text.replace(/\\n/g, \"<br>\");\n}\n/*\nfunction br2nl (text) {   \n    return text.replace(/<\\s*\\/?br\\s*[\\/]?>/gi, '\\n');\n}\n*/\n\nexport function getNpcColor(npcType: number): 'cyan' | 'skyblue' | null {\n    if (npcType >= 2) {\n        return 'cyan';\n    }\n    if (npcType == 1) {\n        return 'skyblue';\n    }\n    return null;\n}\n\nexport function initTooltip($obj?: JQuery<HTMLElement>): void {\n    if ($obj === undefined) {\n        $obj = $('.obj_tooltip');\n    } else if (!$obj.hasClass('obj_tooltip')) {\n        $obj = $obj.find('.obj_tooltip');\n    }\n    console.log($obj);\n\n    $obj.each(function () {\n        const $target = $(this);\n\n        if ($target.data('installHandler')) {\n            return;\n        }\n        $target.data('installHandler', true);\n\n        $target.mouseover(function () {\n            const $objTooltip = $(this);\n            if ($objTooltip.data('setObjTooltip')) {\n                return;\n            }\n\n            let tooltipClassText = $objTooltip.data('tooltip-class');\n            if (!tooltipClassText) {\n                tooltipClassText = '';\n            }\n            const template = '<div class=\"tooltip {0}\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>'\n                .format(tooltipClassText);\n\n            $objTooltip.tooltip({\n                title: function () {\n                    return $.trim($(this).find('.tooltiptext').html());\n                },\n                template: template,\n                html: true\n            }).tooltip('show');\n\n            $objTooltip.data('setObjTooltip', true);\n        });\n    });\n}","import {DateTime} from 'luxon';\n\nexport const DATE_TIME_FORMAT = 'yyyy-MM-dd HH:mm:ss';\nexport const DATE_TIME_FORMAT_WITH_FRACTION = 'yyyy-MM-dd HH:mm:ss.SSS';\n\nexport function getDateTimeNow(withFraction = false): string{\n    if(withFraction){\n        return DateTime.now().toFormat(DATE_TIME_FORMAT_WITH_FRACTION);\n    }\n    else{\n        return DateTime.now().toFormat(DATE_TIME_FORMAT);\n    }\n    \n}","import axios from 'axios';\nimport $ from 'jquery';\nimport { initTooltip, TemplateEngine } from '../hwe/ts/common_legacy';\nimport { InvalidResponse } from './defs';\nimport { getDateTimeNow } from '../hwe/ts/util/getDateTimeNow';\nimport { setAxiosXMLHttpRequest } from '../hwe/ts/util/setAxiosXMLHttpRequest';\n\nconst serverListTemplate = \"\\\n<tr class='server_item bg0 server_name_<%name%>' data-server='<%name%>'>\\\n    <td class='server_name obj_tooltip' data-toggle='tooltip' data-placement='bottom'>\\\n        <span style='font-weight:bold;font-size:1.4em;color:<%color%>'><%korName%>섭</span><br>\\\n        <span class='n_country'></span>\\\n        <span class='tooltiptext server_date'></span>\\\n    </td>\\\n    <td colspan='4' class='server_down'>- 폐 쇄 중 -</td>\\\n</tr>\\\n\";\n\nconst serverTextInfo = \"\\\n<td>\\\n서기 <%year%>년 <%month%>월 (<span style='color:orange;'><%scenario%></span>)<br>\\\n유저 : <%userCnt%> / <%maxUserCnt%>명 <span style='color:cyan;'>NPC : <%npcCnt%>명</span> (<span style='color:limegreen;'><%turnTerm%>분 턴 서버</span>)<br>\\\n(상성 설정:<%fictionMode%>), (기타 설정:<%otherTextInfo%>)\\\n</td>\\\n\";\n\nconst serverProvisionalInfo = \"\\\n<td>\\\n- 오픈 일시 : <%opentime%> -<br>\\\n서기 <%year%>년 <%month%>월 (<span style='color:orange;'><%scenario%></span>)<br>\\\n유저 : <%userCnt%> / <%maxUserCnt%>명 <span style='color:cyan;'>NPC : <%npcCnt%>명</span> (<span style='color:limegreen;'><%turnTerm%>분 턴 서버</span>)<br>\\\n(상성 설정:<%fictionMode%>), (기타 설정:<%otherTextInfo%>)\\\n</td>\\\n\";\n\nconst serverFullTemplate = \"\\\n<td colspan='4' class='server_full'>- 장수 등록 마감 -</td>\\\n\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverSelectPoolTemplate = \"\\\n<td colspan='2' class='not_registered'>- 미 등 록 -</td>\\\n<td class='ignore_border'>\\\n<a href='<%serverPath%>/select_general_from_pool.php'><button type='button' class='general_select with_skin'>장수선택</button></a>\\\n</td>\\\n\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverLoginBtn = \"<a href='<%serverPath%>/' class='item'\\\n><button type='button' class='fill_box with_skin'>입장</button\\\n></a>\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverCreateBtn = \"<a href='<%serverPath%>/join.php' class='item'\\\n><button type='button' class='fill_box with_skin'>장수생성</button\\\n></a>\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverSelectNPCBtn = \"<a href='<%serverPath%>/select_npc.php' class='item'\\\n><button type='button' class='fill_box with_skin'>장수빙의</button\\\n></a>\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverSelectPoolBtn = \"<a href='<%serverPath%>/select_general_from_pool.php' class='item'\\\n><button type='button' class='fill_box with_skin'>장수선택</button\\\n></a>\";\n\nconst serverCreateTemplate = \"\\\n<td colspan='2' class='not_registered'>- 미 등 록 -</div>\\\n<td class='ignore_border vertical_flex BtnPlate'>\\\n<%if(canCreate) {%>\\\n<a href='<%serverPath%>/join.php' class='item'><button type='button' class='fill_box with_skin'>장수생성</button></a>\\\n<%}%>\\\n<%if(canSelectNPC) {%>\\\n<a href='<%serverPath%>/select_npc.php' class='item'><button type='button' class='fill_box with_skin'>장수빙의</button></a>\\\n<%}%>\\\n<%if(canSelectPool) {%>\\\n<a href='<%serverPath%>/select_general_from_pool.php' class='item'><button type='button' class='fill_box with_skin'>장수선택</button></a>\\\n<%}%>\\\n</td>\";\n\nconst serverLoginTemplate = \"\\\n<td style='background:url(\\\"<%picture%>\\\");background-size: 64px 64px;'></td>\\\n<td><%name%></td>\\\n<td class='ignore_border vertical_flex BtnPlate'>\\\n<a href='<%serverPath%>/' class='item'><button type='button' class='fill_box with_skin'>입장</button></a>\\\n</td>\\\n\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst serverReservedTemplate = \"\\\n<td colspan='4' class='server_reserved'>\\\n<%openDatetime==starttime?'':'- 가오픈 일시 : '+openDatetime+ '- <br>'%>\\\n- 오픈 일시 : <%starttime%> - <br>\\\n<span style='color:orange;'><%scenarioName%></span> <span style='color:limegreen;'><%turnterm%>분 턴 서버</span><br>\\\n(상성 설정:<%fictionMode%>), (빙의 여부:<%npcMode%>), (최대 스탯:<%gameConf.defaultStatTotal%>), (기타 설정:<%otherTextInfo%>)\\\n</td>\\\n\";\n\ntype ServerResponseItem = {\n    color: string,\n    korName: string,\n    name: string,\n    exists: boolean,\n    enable: boolean,\n};\n\ntype ServerResponse = {\n    result: true;\n    reason: 'success';\n    server: ServerResponseItem[];\n}\n\ntype RawServerResponse = InvalidResponse | ServerResponse;\n\ntype ReservedGameInfo = {\n    scenarioName: string,\n    turnterm: number,\n    fictionMode: '가상' | '사실',\n    block_general_create: boolean,\n    npcMode: '불가' | '가능' | '선택 생성',\n    openDatetime: string,\n    starttime: string,\n    gameConf: Record<string, string | number>,\n    otherTextInfo: string,\n}\n\ntype GameInfo = {\n    isUnited: number,\n    npcMode: '불가' | '가능' | '선택 생성',\n    year: number,\n    month: number,\n    scenario: string,\n    maxUserCnt: number,\n    turnTerm: number,\n    opentime: string,\n    starttime: string,\n    turntime: string,\n    join_mode: string,\n    fictionMode: '가상' | '사실',\n    block_general_create: boolean,\n    autorun_user: string,\n    userCnt: number,\n    npcCnt: number,\n    nationCnt: number,\n    otherTextInfo: string,\n    defaultStatTotal: number,\n}\n\ntype MyInfo = {\n    name: string,\n    picture: string,\n    serverPath?: string,\n}\n\ntype ServerDetailResponse = {\n    reserved?: ReservedGameInfo;\n    game: GameInfo;\n    me: MyInfo | null | undefined;\n}\n\n$(function ($) {\n    setAxiosXMLHttpRequest();\n    $(\"#btn_logout\").on('click', Entrance_Logout);\n    void Entrance_UpdateServer();\n});\n\nasync function Entrance_UpdateServer() {\n    let data: RawServerResponse;\n\n    try {\n        const response = await axios({\n            url: 'j_server_get_status.php',\n            responseType: 'json',\n            method: 'post'\n        });\n        data = response.data;\n    }\n    catch (e) {\n        alert(e);\n        return;\n    }\n\n    if (!data.result) {\n        alert(data.reason);\n        return;\n    }\n\n    await Entrance_drawServerList(data.server);\n}\n\nasync function Entrance_drawServerList(serverInfos: ServerResponseItem[]) {\n    const $serverList = $('#server_list');\n    const now = getDateTimeNow();\n\n    const serverDetailInfoP: Record<string, Promise<ServerDetailResponse>> = {};\n\n    for (const serverInfo of serverInfos) {\n        if(!serverInfo.exists){\n            continue;\n        }\n        const responseP = axios({\n            url: `../${serverInfo.name}/j_server_basic_info.php`,\n            method: 'get',\n            responseType: 'json'\n        }).then(v=>{\n            return v.data as ServerDetailResponse;\n        });\n        serverDetailInfoP[serverInfo.name] = responseP;\n    }\n    for (const serverInfo of serverInfos) {\n        const $serverHtml = $(TemplateEngine(serverListTemplate, serverInfo));\n        $serverList.append($serverHtml);\n        if (!serverInfo.exists) {\n            continue;\n        }\n\n        const serverPath = `../${serverInfo.name}`;\n\n        let response: ServerDetailResponse;\n        try{\n            if(!(serverInfo.name in serverDetailInfoP)){\n                continue;\n            }\n            response = await serverDetailInfoP[serverInfo.name];\n        }\n        catch(e){\n            console.error(e);\n            continue;\n        }\n\n        if(!response.game){\n            continue;\n        }\n\n        const game = response.game;\n\n        //TODO: 서버 폐쇄 방식을 새롭게 변경\n        $serverHtml.find('.server_down').detach();\n\n        if (game.isUnited == 3) {\n            $serverHtml.find('.n_country').html('§이벤트 종료§');\n            $serverHtml.find('.server_date').html('{0} <br>~ {1}'.format(game.starttime, game.turntime));\n        } else if (game.isUnited == 1) {\n            $serverHtml.find('.n_country').html('§이벤트 진행중§');\n            $serverHtml.find('.server_date').html('{0} ~'.format(game.starttime));\n        } else if (game.isUnited == 2) {\n            $serverHtml.find('.n_country').html('§천하통일§');\n            $serverHtml.find('.server_date').html('{0} <br>~ {1}'.format(game.starttime, game.turntime));\n        } else if (game.opentime <= now) {\n            $serverHtml.find('.n_country').html('<{0}국 경쟁중>'.format(game.nationCnt));\n            $serverHtml.find('.server_date').html('{0} ~'.format(game.starttime));\n        } else {\n            $serverHtml.find('.n_country').html('-가오픈 중-');\n            $serverHtml.find('.server_date').html('{0} ~'.format(game.starttime));\n        }\n\n        if (game.opentime <= now) {\n            $serverHtml.append(\n                TemplateEngine(serverTextInfo, game)\n            );\n        } else {\n            $serverHtml.append(\n                TemplateEngine(serverProvisionalInfo, game)\n            );\n        }\n\n        if (response.me && response.me.name) {\n            const me = response.me;\n            me.serverPath = serverPath;\n            $serverHtml.append(\n                TemplateEngine(serverLoginTemplate, me)\n            );\n        } else if (game.userCnt >= game.maxUserCnt) {\n            $serverHtml.append(\n                TemplateEngine(serverFullTemplate, {})\n            );\n        } else {\n            $serverHtml.append(\n                TemplateEngine(serverCreateTemplate, {\n                    serverPath: serverPath,\n                    canCreate: !game.block_general_create,\n                    canSelectNPC: game.npcMode == '가능',\n                    canSelectPool: game.npcMode == '선택 생성'\n                })\n            )\n        }\n        initTooltip($serverHtml);\n    }\n}\n\nasync function Entrance_Logout() {\n    const response = await axios({\n        url: 'j_logout.php',\n        method: 'post',\n        responseType: 'json'\n    });\n\n    const data: InvalidResponse = response.data;\n    if(!data.result){\n        alert(`로그아웃 실패: ${data.reason}`);\n        return;\n    }\n    location.href = \"../\";\n}","import axios from \"axios\";\n\nexport function setAxiosXMLHttpRequest(): void{\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n    //TODO: X-Requested-With 믿지 말자.\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t960: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhidche_lib\"] = self[\"webpackChunkhidche_lib\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(526)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Error","axios","entityMap","escapeHtml","string","String","replace","s","linkifyStrWithOpt","text","window","linkifyStr","TemplateEngine","html","options","re","reExp","code","cursor","add","line","js","push","match","e","exec","slice","index","length","substr","compiledCode","join","Function","apply","err","console","error","message","initTooltip","$obj","undefined","$","hasClass","find","log","each","$target","this","data","mouseover","$objTooltip","tooltipClassText","template","format","tooltip","title","trim","prototype","args","number","toString","DATE_TIME_FORMAT","DATE_TIME_FORMAT_WITH_FRACTION","getDateTimeNow","withFraction","DateTime","toFormat","serverListTemplate","serverTextInfo","serverProvisionalInfo","serverFullTemplate","serverCreateTemplate","serverLoginTemplate","url","responseType","method","response","alert","result","reason","Entrance_drawServerList","server","serverInfos","$serverList","now","serverDetailInfoP","serverInfo","exists","responseP","name","then","v","$serverHtml","append","serverPath","game","detach","isUnited","starttime","turntime","opentime","nationCnt","me","userCnt","maxUserCnt","canCreate","block_general_create","canSelectNPC","npcMode","canSelectPool","Entrance_Logout","location","href","on","Entrance_UpdateServer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","amdO","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","obj","prop","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}